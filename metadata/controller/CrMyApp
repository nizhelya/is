{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "crMyApp",
        "designer|userClassName": "CrMyApp"
    },
    "designerId": "138c387b-9c71-4f87-8bca-32525812a7b5",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FmAppartment",
                "selector": "#fmAppartment"
            },
            "name": "FmAppartment",
            "designerId": "f20c7be4-8267-4d53-8c79-d9038eb4b83e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "PnAppBti",
                "selector": "#pnAppBti"
            },
            "name": "PnAppBti",
            "designerId": "9e31a97f-e52b-4d43-b7fa-a4ef4bdaffa6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TabFirstPage",
                "selector": "#tabFirstPage"
            },
            "name": "TabFirstPage",
            "designerId": "cbf4bac2-c969-4cfe-ab32-3b11d9b7761b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "cbMyFlat",
                "selector": "#cbMyFlat"
            },
            "name": "cbMyFlat",
            "designerId": "11d6056e-baf7-45aa-812f-aacbeb9d2c58"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "tabOplata",
                "selector": "#tabOplata"
            },
            "name": "tabOplata",
            "designerId": "03204dd3-dfe2-4d13-9727-7928f7f19970"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TabAppNachisleno",
                "selector": "#tabAppNachisleno"
            },
            "name": "TabAppNachisleno",
            "designerId": "f8b4ecad-958d-492c-8fad-c5ff35a4bd73"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#listMenuMyFlat",
                "designer|targetType": "Ext.view.View",
                "fn": "onListMenuMyFlatItemClick",
                "implHandler": [
                    "var me = this;",
                    "// STORE",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//TAB_PANEL",
                    "",
                    "var TabFirstPage = me.getTabFirstPage();",
                    "var activeTab = TabFirstPage.getActiveTab();",
                    "var nameactiveTab = activeTab.getXType();",
                    "   // console.log(record.data);",
                    "",
                    "if(StUser.data.length){",
                    "",
                    "    var btnIpayVisa = Ext.getCmp(\"btnIpayVisa\");",
                    "    var btnMarfinBank = Ext.getCmp(\"btnMarfinBank\");",
                    "",
                    "",
                    "    var values =StUser.getAt(0);",
                    "",
                    "    var selected = record.data;",
                    "  //  console.log(selected);",
                    "",
                    "    if (selected){",
                    "",
                    "        values.set({",
                    "            'address_id':selected.address_id,",
                    "            'raion_id':selected.raion_id,",
                    "            'house_id':selected.house_id,",
                    "            'address':selected.address",
                    "        });",
                    "        StUser.sync();",
                    "",
                    "        //КВАРТИРЫ",
                    "        btnIpayVisa.show();",
                    "        btnMarfinBank.show();",
                    "",
                    "        TabFirstPage.child('#tabLogin').tab.hide();",
                    "        TabFirstPage.child('#tabNach').tab.show();",
                    "        TabFirstPage.child('#tabAppBti').tab.show();",
                    "        TabFirstPage.child('#tabNachApp').tab.show();",
                    "        TabFirstPage.child('#tabAppVodomer').tab.show();",
                    "        TabFirstPage.child('#tabAppTeplomer').tab.show();",
                    "        TabFirstPage.child('#tabKassa').tab.hide();",
                    "        TabFirstPage.child('#tabMarfinBank').tab.hide();",
                    "        TabFirstPage.child('#tabInfoApp').tab.show();",
                    "",
                    "        TabFirstPage.child('#tabAppOplata').tab.show();",
                    "",
                    "        var tab = TabFirstPage.child('#tabNach');",
                    "        tab.setTitle(selected.address);",
                    "",
                    "",
                    "        //TabFirstPage.setActiveTab('tabNach');",
                    "",
                    "",
                    "        //СПРАВОЧНИК",
                    "        if (nameactiveTab==='tabnach'){",
                    "            this.onTabNachActivate();",
                    "        }",
                    "        TabFirstPage.setActiveTab('tabNach');",
                    "        }",
                    "",
                    "",
                    "}",
                    ""
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "name": "onListMenuMyFlatItemClick",
            "designerId": "6f0e9f3a-0cf2-4de2-80bf-0a85e0665018"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#listMenuAddMyFlat",
                "designer|targetType": "Ext.view.View",
                "fn": "onListMenuAddMyFlatItemClick",
                "implHandler": [
                    "var StRaion = Ext.data.StoreManager.get('StRaion');",
                    "var stAddress = Ext.data.StoreManager.get('StAddress');",
                    "stAddress.removeAll();",
                    "StRaion.load({",
                    "    params: {",
                    "        what:'raion'",
                    "    },",
                    "    scope:this",
                    "});",
                    "var winAddMyFlat = Ext.ClassManager.instantiateByAlias('widget.winAddMyFlat');",
                    "winAddMyFlat.show();"
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "name": "onListMenuAddMyFlatItemClick",
            "designerId": "68b2d7b9-6235-4285-840e-be28b39e461d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAddress",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAddressItemDblClick",
                "implHandler": [
                    "//console.log(record.data);",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stlogin =stUser.getAt(0);",
                    "",
                    "var stMyFlat = Ext.data.StoreManager.get(\"StMyFlat\");",
                    "Ext.MessageBox.prompt(record.data.address,' Введите cекретный код квартиры:',",
                    "function(btn,text){",
                    "    if (btn == 'ok') {",
                    "        QueryUserLogin.checkMyFlat(record.data,stlogin.data,text,function(results){",
                    "            if (results.success){",
                    "                stMyFlat.load({",
                    "                    params: {",
                    "                        user_id:stlogin.get('user_id')",
                    "                    },",
                    "                    scope:this",
                    "                });",
                    "",
                    "            }else if (results.nokey){",
                    "                Ext.MessageBox.show({",
                    "                    title: 'Моя квартира',",
                    "                    msg: 'Секретный код неверный',",
                    "                    buttons: Ext.MessageBox.OK,",
                    "                    icon: Ext.MessageBox.ERROR",
                    "                });",
                    "            }else if (results.myflat){",
                    "                Ext.MessageBox.show({",
                    "                    title: 'Моя квартира',",
                    "                    msg: 'Квартира уже в списке',",
                    "                    buttons: Ext.MessageBox.OK,",
                    "                    icon: Ext.MessageBox.ERROR",
                    "                });",
                    "            }else if (results.noid){",
                    "                Ext.MessageBox.show({",
                    "                    title: 'Моя квартира',",
                    "                    msg: 'Ошибка при записи в базу данных',",
                    "                    buttons: Ext.MessageBox.OK,",
                    "                    icon: Ext.MessageBox.ERROR",
                    "                });",
                    "            }",
                    "        });",
                    "    }",
                    "});",
                    ""
                ],
                "name": "itemdblclick",
                "scope": "me"
            },
            "name": "onGrAddressItemDblClick",
            "designerId": "d70afd8e-3422-434c-8a10-e55ff26be439"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabKassa",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabKassaActivate",
                "implHandler": [
                    "//in use",
                    "//STORE",
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "",
                    "",
                    "//LOGIKA",
                    "//FORM",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp1');",
                    "fmInfoApp.down('#delTekPokVodKassa').setDisabled(true);",
                    "fmInfoApp.down('#insTekPokVodKassa').setDisabled(true);",
                    "var fsOsmd = Ext.getCmp('fsOsmd');",
                    "",
                    "",
                    "",
                    "",
                    "//STORE",
                    "//var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");//QueryAddress.getResults <Appartment>",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");//QueryKassa.getResults",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");//QueryKassa.getResults",
                    "var stVodomerKassa = Ext.data.StoreManager.get(\"StVodomerKassa\");//QueryVodomer.getResults  <AppVodomer>",
                    "",
                    "stVodomerKassa.load({",
                    "    params: {",
                    "        what:'AppVodomerKassa',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "",
                    "fmTekNachKassa.getForm().reset();",
                    "",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllAppBank'",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        // console.log(success);",
                    "        // console.log(values);",
                    "",
                    "",
                    "        if (success)  {",
                    "            // me.resetFmKassa();",
                    "            if (records.length) {",
                    "                fmTekNachKassa.getForm().loadRecord(records[0]);",
                    "                var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();",
                    "                var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();",
                    "                var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();",
                    "                var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();",
                    "                var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();",
                    "                var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();",
                    "                var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();",
                    "                var ipay =  records[0].data.ipay;",
                    "",
                    "                var dolg = fmTekNachKassa.getForm().findField('dolg').getValue();",
                    "",
                    "",
                    "                if (dolg1 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext1').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);",
                    "                }",
                    "",
                    "                if (dolg2 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext2').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext2').setDisabled(true);",
                    "                }",
                    "                if (dolg3 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext3').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);",
                    "                }",
                    "                if (dolg4 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext4').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext4').setDisabled(true);",
                    "                }",
                    "                if (ipay === \"1\"){",
                    "                    fsOsmd.setTitle(\"ОСББ\");",
                    "",
                    "                    if (dolg5 > 0){",
                    "                        fmTekNachKassa.getForm().findField('cbNext5').setDisabled(false);",
                    "                    }else{",
                    "                        fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);",
                    "                    }",
                    "                } else {",
                    "                    fsOsmd.setTitle(\"у IPAY нет договора на прием платежей по кварплате\");",
                    "                    fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);",
                    "",
                    "                }",
                    "                if (dolg6 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext6').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);",
                    "                }",
                    "",
                    "                if (dolg7 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext7').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);",
                    "                }",
                    "",
                    "                if (dolg  > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext').setDisabled(false);",
                    "                }",
                    "",
                    "                fmTekNachKassa.down('#account').setDisabled(true);",
                    "",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "",
                    "stTekOplata.load({",
                    "    params: {",
                    "        what:'AppTekOplata',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabKassaActivate",
            "designerId": "e7f3ab61-6d21-4256-962e-e5754d2853b1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabMarfinBank",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabMarfinBankActivate",
                "implHandler": [
                    "//in use",
                    "//STORE",
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "",
                    "//LOGIKA",
                    "//FORM",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');",
                    "var fsKvartplata = Ext.getCmp('fsKvartplata');",
                    "",
                    "",
                    "",
                    "",
                    "//STORE",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");//QueryKassa.getResults",
                    "var StPayment = Ext.data.StoreManager.get(\"StPayment\");",
                    "//var stVodomerKassa = Ext.data.StoreManager.get(\"StVodomerKassa\");//QueryVodomer.getResults  <AppVodomer>",
                    "",
                    "",
                    "fmTekNachKassa.getForm().reset();",
                    "",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllAppBank'",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        // console.log(success);",
                    "        // console.log(records[0]);",
                    "",
                    "",
                    "        if (success)  {",
                    "            //me.resetFmMarfin();",
                    "            if (records.length) {",
                    "                fmTekNachKassa.getForm().loadRecord(records[0]);",
                    "                var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();",
                    "                var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();",
                    "                var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();",
                    "                var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();",
                    "                var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();",
                    "                var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();",
                    "                var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();",
                    "",
                    "                var dolg = fmTekNachKassa.getForm().findField('dolg').getValue();",
                    "                var rko = fmTekNachKassa.getForm().findField('rko').getValue();",
                    "",
                    "",
                    "                if (dolg1 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext1').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);",
                    "                }",
                    "                if (dolg2 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext2').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext2').setDisabled(true);",
                    "                }",
                    "                if (dolg3 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext3').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);",
                    "                }",
                    "                if (dolg4 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext4').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext4').setDisabled(true);",
                    "                }",
                    "                if (rko === \"0\"){",
                    "                    fmTekNachKassa.getForm().findField('cbNext5').hide();",
                    "                    fsKvartplata.setTitle(\"У банка нет договора на прием платежей по кварплате\");",
                    "",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext5').show();",
                    "                    fsKvartplata.setTitle(\"ОСМД\");",
                    "                    if (dolg5 > 0){",
                    "                        fmTekNachKassa.getForm().findField('cbNext5').setDisabled(false);",
                    "                    }else{",
                    "                        fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);",
                    "                    }",
                    "                }",
                    "                if (dolg6 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext6').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);",
                    "                }",
                    "",
                    "                if (dolg7 > 0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext7').setDisabled(false);",
                    "                }else{",
                    "                    fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);",
                    "                }",
                    "                if (dolg > 0){",
                    "",
                    "                    fmTekNachKassa.getForm().findField('cbNext').setDisabled(false);",
                    "                }",
                    "",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "",
                    "StPayment.load({",
                    "    params: {",
                    "        what:'MarfinPayment',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabMarfinBankActivate",
            "designerId": "dcc9851f-8e38-41dc-9ec3-b67ba36b0c06"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppOplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onTabAppOplataActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOplata = Ext.data.StoreManager.get(\"StOplata\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var address = values.get('address');",
                    "var house_id = values.get('house_id');",
                    "var prixod_id = values.get('prixod_id');",
                    "",
                    "StOplata.load({",
                    "    params: {",
                    "        what:'OplataApp',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabAppOplataActivate",
            "designerId": "745e1722-de01-4d24-827a-ed95937044d9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabMenuHome",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabMenuHomeActivate",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "",
                    "//TAB_PANEL",
                    "",
                    "var TabFirstPage = me.getTabFirstPage();",
                    "",
                    "//LOGIKA",
                    "TabFirstPage.child('#tabLogin').tab.show();",
                    "TabFirstPage.child('#tabNach').tab.hide();",
                    "TabFirstPage.child('#tabAppBti').tab.hide();",
                    "TabFirstPage.child('#tabMarfinBank').tab.hide();",
                    "//TabFirstPage.child('#tabNachAppVoda').tab.hide();",
                    "//TabFirstPage.child('#tabNachAppTeplo').tab.hide();",
                    "TabFirstPage.child('#tabNachApp').tab.hide();",
                    "TabFirstPage.child('#tabAppVodomer').tab.hide();",
                    "TabFirstPage.child('#tabAppTeplomer').tab.hide();",
                    "TabFirstPage.child('#tabInfoApp').tab.hide();",
                    "TabFirstPage.child('#tabKassa').tab.hide();",
                    "TabFirstPage.child('#tabAppOplata').tab.hide();",
                    "",
                    "",
                    "TabFirstPage.setActiveTab('tabLogin');"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabMenuHomeActivate",
            "designerId": "f3847157-c198-4a37-bdd7-6e65a773b7f3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppVodomerKassa",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppVodomerKassaSelectionChange",
                "implHandler": [
                    "//in use",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "",
                    "//FORMA",
                    "",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp1');",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "//console.log(selections);",
                    "",
                    "if (selected.length){",
                    "",
                    "    stTekPokVodomera.load({",
                    "        params: {",
                    "            login:login,",
                    "            address_id: address_id,",
                    "            what:'TekPokVodomera',",
                    "            what_id: selected[0].data.address_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                //  console.log(records[0]);",
                    "                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                fmInfoApp.getForm().findField('newValue').setDisabled(false);",
                    "                fmInfoApp.down('#delTekPokVodKassa').setDisabled(false);",
                    "                fmInfoApp.getForm().findField('newValue').setValue(0);",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppVodomerKassaSelectionChange",
            "designerId": "0578aeca-1497-4d3b-8d51-24ce444b3d60"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppVodomerKassa1",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppVodomerKassa1SelectionChange",
                "implHandler": [
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var house_id = values.get('house_id');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "if (selected.length){",
                    "",
                    "    stTekPokVodomera.load({",
                    "        params: {",
                    "            login:login,",
                    "            password:password,",
                    "            address_id: address_id,",
                    "            what:'TekPokVodomera',",
                    "            what_id: selected[0].data.address_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                fmInfoApp.down('#delTekPokVodKassa1').setDisabled(false);",
                    "                fmInfoApp.getForm().findField('newValue').setValue(\"0\").focus();",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppVodomerKassa1SelectionChange",
            "designerId": "9559ab80-65c3-4b58-9a18-34fc6db74bdd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppVodomerKassa2",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppVodomerKassa2SelectionChange",
                "implHandler": [
                    "//in use",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "",
                    "//FORMA",
                    "",
                    "var fmInfoApp1 = Ext.getCmp('fmInfoApp2');",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "//console.log(selections);",
                    "",
                    "if (selected.length){",
                    "",
                    "    stTekPokVodomera.load({",
                    "        params: {",
                    "            login:login,",
                    "            address_id: address_id,",
                    "            what:'TekPokVodomera',",
                    "            what_id: selected[0].data.address_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            //  console.log(success);",
                    "            if(success){",
                    "                //  console.log(success);",
                    "",
                    "                fmInfoApp1.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                fmInfoApp1.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                fmInfoApp1.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                fmInfoApp1.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                fmInfoApp1.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                fmInfoApp1.getForm().findField('type').setValue(records[0].get('type'));",
                    "                fmInfoApp1.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                fmInfoApp1.getForm().findField('place').setValue(records[0].get('place'));",
                    "                fmInfoApp1.getForm().findField('newValue').setDisabled(false);",
                    "                fmInfoApp1.down('#delTekPokVodKassa2').setDisabled(false);",
                    "                fmInfoApp1.getForm().findField('newValue').setValue(0);",
                    "                fmInfoApp1.getForm().findField('newValue').focus();",
                    "",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppVodomerKassa2SelectionChange",
            "designerId": "3ccaf7a8-b2bb-4e5a-96ec-37312f229e0f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "VpIsCity",
                "selector": "vpIsCity"
            },
            "name": "VpIsCity",
            "designerId": "dc1be274-85c5-4ba9-9093-323eff57bb29"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokVodKassa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokVodKassaClick",
                "implHandler": [
                    "this.InsTekPokVodomera();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokVodKassaClick",
            "designerId": "c9e3dea3-8a50-483c-a8e2-dc901049d870"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokVodKassa1",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokVodKassa1Click",
                "implHandler": [
                    "this.InsTekPokVodomera1();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokVodKassa1Click",
            "designerId": "3939e6fc-5812-4fbe-bc11-b3d78d64fef7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokVodKassa2",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokVodKassa2Click",
                "implHandler": [
                    "this.InsTekPokVodomera2();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokVodKassa2Click",
            "designerId": "d948546e-dcad-490e-a660-7659e2805b58"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAppNachisleno",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAppNachislenoClick",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "var comboMyFlat = me.getCbMyFlat();",
                    "var address=comboMyFlat.getValue();",
                    "var change = false;",
                    "var store = Ext.data.StoreManager.get(\"StNachisleno\");",
                    "if(store.data.length){",
                    "    var addressid = store.getAt(0).get('address_id');",
                    "    if (address!==addressid){",
                    "        change=true;",
                    "",
                    "    }",
                    "}",
                    "var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');",
                    "var tab = tabFirstPage.child('#tabAppNachisleno');",
                    "if (!tab) {",
                    "    store.load({",
                    "        params: {",
                    "            what:'nachisleno',",
                    "            what_id: address",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    var newtab  = tabFirstPage.add({",
                    "        xtype:'tabAppNachisleno'",
                    "    });",
                    "    tabFirstPage.setActiveTab(newtab);",
                    "}else{",
                    "",
                    "    if(change){",
                    "        store.load({",
                    "            params: {",
                    "                what:'nachisleno',",
                    "                what_id: address",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "    tabFirstPage.setActiveTab(tab);",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnAppNachislenoClick",
            "designerId": "07c8d970-77a6-4276-a76b-2228600c255d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAppOplata",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAppOplataClick",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "var comboMyFlat = me.getCbMyFlat();",
                    "var address=comboMyFlat.getValue();",
                    "var change = false;",
                    "var store = Ext.data.StoreManager.get(\"StOplata\");",
                    "if(store.data.length){",
                    "    var addressid = store.getAt(0).get('address_id');",
                    "    if (address!==addressid){",
                    "        change=true;",
                    "",
                    "    }",
                    "}",
                    "var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');",
                    "var tab = tabFirstPage.child('#tabOplata');",
                    "//var tab = me.getPnAppBti();",
                    "//console.log(tab);",
                    "if (!tab) {",
                    "    //    console.log(change);",
                    "    store.load({",
                    "        params: {",
                    "            what:'Oplata',",
                    "            what_id: address",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    var newtab  = tabFirstPage.add({",
                    "        xtype:'tabOplata'",
                    "    });",
                    "    tabFirstPage.setActiveTab(newtab);",
                    "}else{",
                    "    //  console.log(change);",
                    "    if(change){",
                    "        store.load({",
                    "            params: {",
                    "                what:'Oplata',",
                    "                what_id: address",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "    tabFirstPage.setActiveTab(tab);",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnAppOplataClick",
            "designerId": "c59a0314-4674-40d3-8d26-03146c57cd85"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAppTarif",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAppTarifClick",
                "implHandler": [
                    "var map= Ext.getCmp('mapPnViK');",
                    "//console.log(map);",
                    "//in use",
                    "var me =this;",
                    "",
                    "var comboMyFlat = me.getCbMyFlat();",
                    "var address=comboMyFlat.getValue();",
                    "var change = false;",
                    "var store = Ext.data.StoreManager.get(\"StAppTarif\");",
                    "if(store.data.length){",
                    "    var addressid = store.getAt(0).get('address_id');",
                    "    if (address!==addressid){",
                    "        change=true;",
                    "    }",
                    "}",
                    "var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');",
                    "var tab = tabFirstPage.child('#pnAppTarif');",
                    "//var tab = me.getPnAppBti();",
                    "//console.log(tab);",
                    "if (!tab) {",
                    "    //    console.log(change);",
                    "    store.load({",
                    "        params: {",
                    "            what:'AppTarif',",
                    "            what_id: address",
                    "        },",
                    "        scope:this",
                    "    });",
                    "    var newtab  = tabFirstPage.add({",
                    "        xtype:'pnAppTarif'",
                    "    });",
                    "    tabFirstPage.setActiveTab(newtab);",
                    "}else{",
                    "    //console.log(change);",
                    "    if(change){",
                    "        store.load({",
                    "            params: {",
                    "                what:'AppTarif',",
                    "                what_id: address",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "    tabFirstPage.setActiveTab(tab);",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnAppTarifClick",
            "designerId": "125deabb-323b-4f7e-af9b-0aceef2b9c06"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnTekNach",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnTekNachClick",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');",
                    "var tab = tabFirstPage.child('#pnTekNach');",
                    "//var tab=tabFirstPage.getComponent('pnTekNach');",
                    "//console.log(tab);",
                    "if (!tab) {",
                    "    var newtab  = tabFirstPage.add({",
                    "        xtype:'pnTekNach'",
                    "    });",
                    "    tabFirstPage.setActiveTab(newtab);",
                    "}else{",
                    "",
                    "    tabFirstPage.setActiveTab(tab);",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnTekNachClick",
            "designerId": "6199b182-af17-4598-a180-7c261c01db30"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnmapcity",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnmapcityClick",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');",
                    "var tab = tabFirstPage.child('#pnCityMap');",
                    "if (!tab) {",
                    "",
                    "    var newtab  = tabFirstPage.add({",
                    "        xtype:'pnCityMap'",
                    "    });",
                    "",
                    "    tabFirstPage.setActiveTab(newtab);",
                    "}else{",
                    "",
                    "    tabFirstPage.setActiveTab(tab);",
                    "}",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnmapcityClick",
            "designerId": "fcadd475-4527-40d6-bf79-962f07e1c9b7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TekNachApp",
                "selector": "#tekNachApp"
            },
            "name": "TekNachApp",
            "designerId": "a3324576-ed55-4730-aaee-9733c8844c34"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TekNachOplata",
                "selector": "#tekNachOplata"
            },
            "name": "TekNachOplata",
            "designerId": "0b6c626f-e0b2-42ac-a20a-04e3a89babf5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnpoint",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnpointClick",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');",
                    "var tab = tabFirstPage.child('#mapPnPaymentCenters');",
                    "if (!tab) {",
                    "",
                    "    var newtab  = tabFirstPage.add({",
                    "        xtype:'mapPnPaymentCenters'",
                    "    });",
                    "",
                    "    tabFirstPage.setActiveTab(newtab);",
                    "}else{",
                    "",
                    "    tabFirstPage.setActiveTab(tab);",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnpointClick",
            "designerId": "b70a481f-a05f-4606-beae-7b8dc5c8d834"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppHistory",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppHistorySelectionChange",
                "implHandler": [
                    "",
                    "//LOGIN & PASSWORD",
                    "var form = Ext.getCmp('fmAppartment');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppHistorySelectionChange",
            "designerId": "8dbd00e3-4cae-44d9-80af-f94690fe35dd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grPayment",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrPaymentSelectionChange",
                "implHandler": [
                    "//LOGIN & PASSWORD",
                    "var form = Ext.getCmp('fmParamsPay');",
                    "if (selected.length > 0 && selected[0].data.chek === 9) {",
                    "    var sum =Ext.util.Format.number(selected[0].data.summa,'0,000.00');",
                    "    var com =Ext.util.Format.number(selected[0].data.commission,'0,000.00');",
                    "//console.log(sum);",
                    " //   console.log(com);",
                    "",
                    "    form.getForm().reset();",
                    "    form.getForm().findField('payment_id').setValue(selected[0].data.payment_id);",
                    "    form.getForm().findField('summa').setValue(selected[0].data.summa+selected[0].data.commission);",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrPaymentSelectionChange",
            "designerId": "b82fe2ba-ba9c-4b5e-a1a6-881dc04a2efb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newValueVodomer",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewValueVodomerSpecialkey",
                "implHandler": [
                    "// in use",
                    "var value = field.getValue();",
                    "if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {",
                    "    this.InsTekPokVodomera();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewValueVodomerSpecialkey",
            "designerId": "883327d3-10f7-4a51-b165-70daad2d4cca"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newValueVodomer1",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewValueVodomer1Specialkey",
                "implHandler": [
                    "// in use",
                    "var value = field.getValue();",
                    "if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {",
                    "    this.InsTekPokVodomera1();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewValueVodomer1Specialkey",
            "designerId": "93d92742-f165-46a9-b46f-0788fdebcdbd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newValueVodomer2",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewValueVodomer2Specialkey",
                "implHandler": [
                    "// in use",
                    "var value = field.getValue();",
                    "if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {",
                    "    this.InsTekPokVodomera2();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewValueVodomer2Specialkey",
            "designerId": "abfa41b6-e388-48c1-b036-438460423bc0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newOplataKassa",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewOplataKassaSpecialkey",
                "implHandler": [
                    "// in use",
                    "//console.log(field.getFocusEl());",
                    "var value = field.getValue();",
                    "if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {",
                    "    this.insNewOplata();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewOplataKassaSpecialkey",
            "designerId": "f17bbedb-f127-4915-835c-732836cbba51"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#delTekPokVodKassa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDelTekPokVodKassaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "var value = fmInfoApp.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Удаление последних показаний счетчика воды',",
                    "    msg: 'Вы удаляете последнее показание по счетчику <br>тип воды <b>'+value.type+",
                    "    '</b> <br>Место установки <b>'+value.place+'</b><br>Показание<b>'+value.tek+",
                    "    '</b><br>Подтвердите или отмените свои действия.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'подтвеждаю',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryVodomer.delPokVodomera(value,function(results){",
                    "                if (results.success === \"1\"){",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                    stTekNachKassa.load({",
                    "                        params: {",
                    "                            login:value.login,",
                    "                            password:value.password,",
                    "                            raion_id: value.raion_id,",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            what:'TekNachAllApp'",
                    "                        },",
                    "                        callback: function(rec,operation,succ){",
                    "                            if(succ){",
                    "                                fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                    stTekPokVodomera.load({",
                    "                        params: {",
                    "                            what:'TekPokVodomera',",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            vodomer_id: value.vodomer_id,",
                    "                            password:value.password,",
                    "                            login:value.login",
                    "                        },",
                    "                        callback: function(records,operation,success){",
                    "                            if(success){",
                    "                                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                fmInfoApp.down('#delTekPokVodKassa').setDisabled(true);",
                    "",
                    "",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                    me.resetFmKassa();",
                    "                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                }else{",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний счетчика воды',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.ERROR",
                    "                    });",
                    "                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDelTekPokVodKassaClick",
            "designerId": "4d95691b-8c59-47f9-baf5-4306221002ea"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#delTekPokVodKassa1",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDelTekPokVodKassa1Click",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa1');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp1');",
                    "var value = fmInfoApp.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Удаление последних показаний счетчика воды',",
                    "    msg: 'Вы удаляете последнее показание по счетчику <br>тип воды <b>'+value.type+",
                    "    '</b> <br>Место установки <b>'+value.place+'</b><br>Показание<b>'+value.tek+",
                    "    '</b><br>Подтвердите или отмените свои действия.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'подтвеждаю',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryVodomer.delPokVodomera(value,function(results){",
                    "                if (results.success === \"1\"){",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                    stTekNachKassa.load({",
                    "                        params: {",
                    "                            login:value.login,",
                    "                            raion_id: value.raion_id,",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            what:'TekNachAllApp'",
                    "                        },",
                    "                        callback: function(rec,operation,succ){",
                    "                            if(succ){",
                    "                                fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                    stTekPokVodomera.load({",
                    "                        params: {",
                    "                            what:'TekPokVodomera',",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            vodomer_id: value.vodomer_id,",
                    "                            login:value.login",
                    "                        },",
                    "                        callback: function(records,operation,success){",
                    "                            if(success){",
                    "                                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                fmInfoApp.down('#delTekPokVodKassa1').setDisabled(true);",
                    "",
                    "",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                    me.resetFmKassa();",
                    "                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                }else{",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний счетчика воды',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.ERROR",
                    "                    });",
                    "                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDelTekPokVodKassa1Click",
            "designerId": "f7db9555-6675-41b5-98d0-2424e62a5621"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insOplataMarfinBank",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsOplataMarfinBankClick",
                "implHandler": [
                    "",
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stPayment = Ext.data.StoreManager.get(\"StPayment\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    user_id:values.get('user_id')",
                    "};",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');",
                    "var fmParamsPay = Ext.getCmp('fmParamsPay');",
                    "",
                    "var value = fmTekNachKassa.getValues();",
                    "//LOGIKA",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryPaymentMarfin.newOplata(value,function(results){",
                    "    if (results.success === \"1\"){",
                    "                   // console.log(results.status);",
                    "",
                    "            fmParamsPay.getForm().findField('payment_id').setValue(results.ins_id);",
                    "            fmParamsPay.getForm().findField('summa').setValue(results.summa);",
                    "            fmParamsPay.getForm().findField('sign').setValue(results.sign);",
                    "            fmParamsPay.getForm().findField('xml').setValue(results.xml);",
                    "",
                    "",
                    "            stPayment.load({",
                    "                params: {",
                    "                    what:'MarfinPayment',",
                    "                    login:value.login,",
                    "                    password:value.password,",
                    "                    pay_id: results.ins_id,",
                    "                    address_id: value.address_id",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "            msg: results.msg ,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsOplataMarfinBankClick",
            "designerId": "da0acbd3-b88f-494c-acb7-a1984db3da04"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#printRaschListok",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintRaschListokClick",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var address_id = values.data.address_id;",
                    "var raion_id = values.data.raion_id;",
                    "//console.log(values);",
                    "var usertype = 1;",
                    "",
                    "var tabFirstPage =  Ext.getCmp('tabFirstPage');",
                    "if (address_id) {",
                    "    var report = 'raspechatkaOplataApp';",
                    "    var namereport = 'Расчетка';",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        report:report,",
                    "        what:report,",
                    "        raion_id: raion_id,",
                    "        address_id: address_id",
                    "    };",
                    "    var tab = tabFirstPage.child('#'+report);",
                    "    if (!tab) {",
                    "        tab  = tabFirstPage.add({",
                    "            xtype:'tabReport',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "    }",
                    "    tabFirstPage.setActiveTab(tab);",
                    "    var reppan = tab.getComponent(0);",
                    "    // Basic mask:",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Отчеты...',",
                    "        msg: 'Загрузка отчета.Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "    QueryReport.getResults(value,function(data){",
                    "        if (data){",
                    "            reppan.update(data.content);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            Ext.REPORTSQL =data.sql;",
                    "            Ext.REPORTTITLE =report;",
                    "            myMask.close();",
                    "",
                    "        } else {",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "            myMask.close();",
                    "",
                    "        }",
                    "    });",
                    "",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onPrintRaschListokClick",
            "designerId": "e8e8352e-e2c4-43e3-9df7-9ac730c8cb59"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetFmMarfin",
                "implHandler": [
                    "var form = Ext.getCmp('fmTekNachMarfin');",
                    "form.getForm().findField('cbNext').setValue(false);",
                    "form.getForm().findField('cbNext1').setValue(false);",
                    "form.getForm().findField('cbNext2').setValue(false);",
                    "form.getForm().findField('cbNext3').setValue(false);",
                    "form.getForm().findField('cbNext4').setValue(false);",
                    "form.getForm().findField('cbNext5').setValue(false);",
                    "form.getForm().findField('cbNext7').setValue(false);",
                    "",
                    "form.getForm().findField('cbNext').setDisabled(false);",
                    "form.getForm().findField('cbNext1').setDisabled(false);",
                    "form.getForm().findField('cbNext2').setDisabled(false);",
                    "form.getForm().findField('cbNext3').setDisabled(false);",
                    "form.getForm().findField('cbNext4').setDisabled(false);",
                    "form.getForm().findField('cbNext5').setDisabled(false);",
                    "form.getForm().findField('cbNext7').setDisabled(false);",
                    "",
                    "form.getForm().findField('dolg').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg1').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg2').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg3').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg4').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg5').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg6').setFieldStyle('background-color: #fff; background-image: none;');",
                    "form.getForm().findField('dolg7').setFieldStyle('background-color: #fff; background-image: none;');",
                    "",
                    "//form.down('#DoAllReset').setDisabled(true);",
                    "//form.down('#account').setDisabled(true);",
                    "",
                    "//var newOplata = form.getForm().findField('newOplata').setValue(0);",
                    ""
                ]
            },
            "name": "resetFmMarfin",
            "designerId": "79bafaf4-a9e2-49c4-a1f2-4718d62539bf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "InsTekPokVodomera",
                "implHandler": [
                    "var me = this;",
                    "//console.log(me);",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    user_id:values.get('user_id'),",
                    "    login:values.get('login'),",
                    "    address_id:values.get('address_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "//console.log(values);",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp1');",
                    "var value = fmInfoApp.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "var max =newValue - value.tek;",
                    "if (max<=0){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',",
                    "        buttons: Ext.MessageBox.CANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:",
                    "        {",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }",
                    "        }",
                    "    });",
                    "} else if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }else{",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success === \"1\"){",
                    "",
                    "                        stTekNachKassa.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                raion_id: value.raion_id,",
                    "                                what:'TekNachAllApp'",
                    "                            },",
                    "                            callback: function(rec,operation,succ){",
                    "                                if(succ){",
                    "                                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                    fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                    fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                    fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                    fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                    fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                    fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                    fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                            msg: results.msg,",
                    "                            buttons: Ext.MessageBox.OK,",
                    "                            icon: Ext.MessageBox.INFO",
                    "                        });",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "",
                    "                    }else{",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',",
                    "                            msg: results.msg,",
                    "                            buttons: Ext.MessageBox.OK,",
                    "                            icon: Ext.MessageBox.ERROR",
                    "                        });",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success==='1'){",
                    "            stTekNachKassa.load({",
                    "                params: {",
                    "                    login:value.login,",
                    "                    password:value.password,",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    raion_id: value.raion_id,",
                    "                    what:'TekNachAllApp'",
                    "                },",
                    "                callback: function(rec,operation,succ){",
                    "                    if(succ){",
                    "                        //   console.log(rec);",
                    "",
                    "                        fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        //console.log(records);",
                    "",
                    "                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                msg: results.msg,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "        }else{",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                msg: results.msg,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ]
            },
            "name": "InsTekPokVodomera",
            "designerId": "a24bc2c6-0328-4b26-b167-70c1b8e6f079"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekOplataVik",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekOplataVikClick",
                "implHandler": [
                    "",
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");//QueryKassa.getResults",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    user_id:values.get('user_id'),",
                    "    what:'oplataVik'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var value = fmTekNachKassa.getValues();",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryPayment.newOplata(value,function(results){",
                    "    console.log(results);",
                    "if (results.success === \"1\"){",
                    "    if (results.status === \"1\"){",
                    "        var ins_id = results.ins_id;",
                    "        var url = results.url;",
                    "        var vp = Ext.getCmp('tabFirstPage');",
                    "        var h = vp.getHeight();",
                    "        var w = vp.getWidth();",
                    "        var winpaym = new Ext.Window({",
                    "            title : \"Оплата\",",
                    "            modal : true,",
                    "            width : w,",
                    "            height: h,",
                    "            layout : 'fit',",
                    "            items : [{",
                    "                xtype : \"component\",",
                    "                id: \"iframe1\",",
                    "                autoEl : {",
                    "                    tag : \"iframe\",",
                    "                    src : url",
                    "                }",
                    "            }],",
                    "            listeners:{",
                    "                beforeclose:function(){",
                    "                    var btn =  Ext.dom.Query.select('.button button-long site_url_ok');",
                    "                    var myMask= Ext.Msg.show({",
                    "                        title:'Оплата по системе iPAY...',",
                    "                        msg: 'Подтверждение оплаты.Ожидайте...',",
                    "                        buttons: Ext.Msg.CANCEL,",
                    "                        wait: true,",
                    "                        modal: true,",
                    "                        icon: Ext.Msg.INFO",
                    "                    });",
                    "                    var task =  {",
                    "                        run: function(){",
                    "                            var value2 = {",
                    "                                login:values.get('login'),",
                    "                                password:values.get('password'),",
                    "                                ins_id:ins_id,",
                    "                                what:'PaymentStatus'",
                    "                            };",
                    "                            QueryPayment.getResults(value2,function(results){",
                    "                                var status = results.data[0].status;",
                    "                                if (status === \"5\"){",
                    "                                    Ext.TaskManager.stop(task);",
                    "                                    myMask.close();",
                    "                                    fmTekNachKassa.getForm().reset();",
                    "                                    ",
                    "                                    stTekNachKassa.load({",
                    "                                        params: {",
                    "                                            what:'TekNachAllApp',",
                    "                                            login:value.login,",
                    "                                            password:value.password,",
                    "                                            what_id: value.address_id,",
                    "                                            address_id: value.address_id",
                    "                                        },",
                    "                                        callback: function(records,operation,success){",
                    "                                            if (success)  {",
                    "                                                me.resetFmKassa();",
                    "                                                if (records.length) {",
                    "                                                    fmTekNachKassa.getForm().loadRecord(records[0]);",
                    "                                                    var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();",
                    "                                                    var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();                                                    ",
                    "                                                    var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();",
                    "                                                    var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();",
                    "                                                    var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();",
                    "                                                    var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();",
                    "                                                    var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();",
                    "                                                    ",
                    "                                                    if (dolg1 <=0 && dolg2 <=0){",
                    "                                                        fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);",
                    "                                                    }",
                    "                                                    if (dolg3 <=0 && dolg4 <=0){",
                    "                                                        fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);",
                    "                                                    }",
                    "                                                    if (dolg5<=0){",
                    "                                                        fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);",
                    "                                                    }",
                    "                                                    if (dolg6<=0){",
                    "                                                        fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);",
                    "                                                    }",
                    "                                                    if (dolg7<=0){",
                    "                                                        fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);",
                    "                                                    }",
                    "                                                }",
                    "                                            }",
                    "                                        },",
                    "                                        scope:this",
                    "                                    });",
                    "                                    stTekOplata.load({",
                    "                                        params: {",
                    "                                            what:'AppTekOplata',",
                    "                                            login:value.login,",
                    "                                            password:value.password,",
                    "                                            what_id: value.address_id,",
                    "                                            address_id: value.address_id",
                    "                                        },",
                    "                                        scope:this",
                    "                                    });",
                    "                                }else {",
                    "                                    myMask.close();",
                    "                                    Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                                                         msg: results.msg ,",
                    "                                                         buttons: Ext.MessageBox.OK,",
                    "                                                         icon: Ext.MessageBox.ERROR",
                    "                                                        });",
                    "                                    Ext.TaskManager.stop(task);",
                    "                                }",
                    "                            });",
                    "                        },",
                    "                        interval: 5000,",
                    "                        repeat:20",
                    "                    };",
                    "                    Ext.TaskManager.start(task);",
                    "                }",
                    "            }",
                    "            ",
                    "        }).show();",
                    "        ",
                    "    } else {",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                             msg: results.msg ,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.ERROR",
                    "                            });",
                    "    }",
                    "} else {",
                    "    Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                         msg: results.msg ,",
                    "                         buttons: Ext.MessageBox.OK,",
                    "                         icon: Ext.MessageBox.ERROR",
                    "                        });",
                    "}",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekOplataVikClick",
            "designerId": "703de097-46b9-47e1-9f19-05350a6cb8fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnIpayVisa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnIpayVisaClick",
                "implHandler": [
                    "/*",
                    "var msg = \"<center>Уважаемые клиенты !!!</center> <br>Ведутся наладочные работы ПО  на ООО «IPay» <br>сервис временно закрыт для оплаты\";",
                    "Ext.MessageBox.show({title: 'Сервис интернет-платежей iPay.ua.',",
                    "                     msg: msg,",
                    "                     buttons: Ext.MessageBox.OK,",
                    "                     icon: Ext.MessageBox.INFO",
                    "                    });",
                    "",
                    "*/",
                    "var me = this;",
                    "var TabFirstPage = me.getTabFirstPage();",
                    "TabFirstPage.child('#tabKassa').tab.show();",
                    "var tab = TabFirstPage.child('#tabKassa');",
                    "//tab.setTitle(\"IPAY.UA VISA\");",
                    "TabFirstPage.setActiveTab('tabKassa');",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnIpayVisaClick",
            "designerId": "6e969a4c-8e27-4273-a2c8-521d1aed2ff1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "InsTekPokVodomera1",
                "implHandler": [
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomer'",
                    "};",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa1');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "var value = fmInfoApp.getValues();",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "var max =newValue - value.tek;",
                    "if (max<=0){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Текущие показания <b>'+value.tek+",
                    "        '</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',",
                    "        buttons: Ext.MessageBox.CANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }",
                    "        }",
                    "    });",
                    "} else if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +",
                    "        '</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }else{",
                    "                fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success === \"1\"){",
                    "                        stTekNachKassa.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                raion_id: value.raion_id,",
                    "                                what:'TekNachAllApp'",
                    "                            },",
                    "                            callback: function(rec,operation,succ){",
                    "                                if(succ){",
                    "                                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                    fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                    fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                    fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                    fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                    fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                    fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                    fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                                             msg: results.msg,",
                    "                                             buttons: Ext.MessageBox.OK,",
                    "                                             icon: Ext.MessageBox.INFO",
                    "                                            });",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "",
                    "                    }else{",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                                             msg: results.msg,",
                    "                                             buttons: Ext.MessageBox.OK,",
                    "                                             icon: Ext.MessageBox.ERROR",
                    "                                            });",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    fmInfoApp.getForm().findField('newValue').setValue(0);",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success==='1'){",
                    "            stTekNachKassa.load({",
                    "                params: {",
                    "                    login:value.login,",
                    "                    password:value.password,",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    raion_id: value.raion_id,",
                    "                    what:'TekNachAllApp'",
                    "                },",
                    "                callback: function(rec,operation,succ){",
                    "                    if(succ){",
                    "",
                    "                        fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                                 msg: results.msg,",
                    "                                 buttons: Ext.MessageBox.OK,",
                    "                                 icon: Ext.MessageBox.INFO",
                    "                                });",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0);",
                    "",
                    "        }else{",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',",
                    "                                 msg: results.msg,",
                    "                                 buttons: Ext.MessageBox.OK,",
                    "                                 icon: Ext.MessageBox.ERROR",
                    "                                });",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ]
            },
            "name": "InsTekPokVodomera1",
            "designerId": "f53ca823-4733-46b7-9baa-51fc8f241139"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "InsTekPokVodomera2",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//console.log(me);",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    user_id:values.get('user_id'),",
                    "    login:values.get('login'),",
                    "    address_id:values.get('address_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "//console.log(values);",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp2');",
                    "var value = fmInfoApp.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "var max =newValue - value.tek;",
                    "if (max<=0){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',",
                    "        buttons: Ext.MessageBox.CANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:",
                    "        {",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }",
                    "        }",
                    "    });",
                    "} else if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }else{",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success === \"1\"){",
                    "",
                    "                        stTekNachKassa.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                raion_id: value.raion_id,",
                    "                                what:'TekNachAllApp'",
                    "                            },",
                    "                            callback: function(rec,operation,succ){",
                    "                                if(succ){",
                    "                                    // me.resetFmKassa();",
                    "                                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                    fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                    fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                    fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                    fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                    fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                    fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                    fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                            msg: results.msg,",
                    "                            buttons: Ext.MessageBox.OK,",
                    "                            icon: Ext.MessageBox.INFO",
                    "                        });",
                    "                        me.resetFmKassa();",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "",
                    "                    }else{",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',",
                    "                            msg: results.msg,",
                    "                            buttons: Ext.MessageBox.OK,",
                    "                            icon: Ext.MessageBox.ERROR",
                    "                        });",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success==='1'){",
                    "            stTekNachKassa.load({",
                    "                params: {",
                    "                    login:value.login,",
                    "                    password:value.password,",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    raion_id: value.raion_id,",
                    "                    what:'TekNachAllApp'",
                    "                },",
                    "                callback: function(rec,operation,succ){",
                    "                    if(succ){",
                    "                        //   console.log(rec);",
                    "",
                    "                        fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        //console.log(records);",
                    "",
                    "                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                msg: results.msg,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "            me.resetFmKassa();",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "        }else{",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                msg: results.msg,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ]
            },
            "name": "InsTekPokVodomera2",
            "designerId": "5edf0d68-6c1c-499a-829c-d119fd37500b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#winIpay1",
                "designer|targetType": "Ext.window.Window",
                "fn": "onWinIpayClose",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "// STORE",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//TAB_PANEL",
                    "",
                    "var tabPnCenter = me.getTabFirstPage();",
                    "//TabFirstPage.setActiveTab('tabNach');",
                    "var pay_id  = Ext.PAY_ID;",
                    "",
                    "location.href = \"https://is.yuzhny.com/ipay/index.php\";",
                    "if(pay_id.length){",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Оплата через сервис on-line платежей IPAY.UA ',",
                    "        msg: 'Подтверждение оплаты.Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    params = {",
                    "        pay_id:pay_id,",
                    "        what:\"PaymentStatus\"",
                    "    };",
                    "    QueryPayment.getResults(params,function(results){",
                    "        if (results.data[0].status === \"5\"){",
                    "            myMask.close();",
                    "            var address_id = results.data[0].address_id;",
                    "            var raion_id = results.data[0].raion_id;",
                    "",
                    "",
                    "            Ext.MessageBox.confirm({",
                    "                title: 'Оплата через сервис on-line платежей IPAY.UA ',",
                    "                msg: '<b>Южненская Коммунальная Информационная Система</b><br>Платеж через сервис IPAY.UA обрабртан</center>',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO,",
                    "                buttonText:{",
                    "                    ok: \"Закрыть!\"",
                    "                }",
                    "            });",
                    "        }else{",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({title: 'Оплата через сервис on-line платежей IPAY.UA ',",
                    "                                 msg: '<b>Южненская Коммунальная Информационная Система</b><br>Платеж через сервис IPAY.UA еще не обработан<br> ',",
                    "                                 buttons: Ext.MessageBox.OK,",
                    "                                 icon: Ext.MessageBox.INFO,",
                    "                                 buttonText:{",
                    "                                     ok: \"Закрыть!\"",
                    "                                 }",
                    "                                });",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "close",
                "scope": "me"
            },
            "name": "onWinIpayClose",
            "designerId": "40eef456-3045-42af-ae2d-5419eb875d6a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnMarfinBank",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnMarfinBankClick",
                "implHandler": [
                    "var me = this;",
                    "var TabFirstPage = me.getTabFirstPage();",
                    "TabFirstPage.child('#tabMarfinBank').tab.show();",
                    "var tab = TabFirstPage.child('#tabMarfinBank');",
                    "tab.setTitle(\"МарфинБанк\");",
                    "TabFirstPage.setActiveTab('tabMarfinBank');"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnMarfinBankClick",
            "designerId": "e49a4136-c7c4-41c0-b7cc-5c49c83ab545"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#checkOplata",
                "designer|targetType": "Ext.button.Button",
                "fn": "onCheckOplataClick",
                "implHandler": [
                    "//in use",
                    "//STORE",
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "",
                    "//LOGIKA",
                    "//FORM",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');",
                    "var fmParamsPay = Ext.getCmp('fmParamsPay');",
                    "",
                    "//STORE",
                    "//var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");//QueryAddress.getResults <Appartment>",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");//QueryKassa.getResults",
                    "var StPayment = Ext.data.StoreManager.get(\"StPayment\");//QueryKassa.getResults",
                    "//var stVodomerKassa = Ext.data.StoreManager.get(\"StVodomerKassa\");//QueryVodomer.getResults  <AppVodomer>",
                    "",
                    "",
                    "//fmTekNachKassa.getForm().reset();",
                    "",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp'",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "",
                    "        if (success)  {",
                    "            if (records.length) {",
                    "                fmParamsPay.getForm().reset();",
                    "                fmTekNachKassa.getForm().reset();",
                    "                fmTekNachKassa.getForm().loadRecord(records[0]);",
                    "                var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();",
                    "                var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();",
                    "                var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();",
                    "                var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();",
                    "                var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();",
                    "                var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();",
                    "                var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();",
                    "",
                    "                var dolg = fmTekNachKassa.getForm().findField('dolg').getValue();",
                    "",
                    "",
                    "                if (dolg1<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);",
                    "                }",
                    "                if (dolg2<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext2').setDisabled(true);",
                    "                }",
                    "                if (dolg3<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);",
                    "                }",
                    "                if (dolg4<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext4').setDisabled(true);",
                    "                }",
                    "                if (dolg5<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);",
                    "                }",
                    "                if (dolg6<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);",
                    "                }",
                    "                if (dolg7<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);",
                    "                }",
                    "                if (dolg<=0){",
                    "                    fmTekNachKassa.getForm().findField('cbNext').setDisabled(true);",
                    "                }",
                    "",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "",
                    "StPayment.load({",
                    "    params: {",
                    "        what:'MarfinPayment',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onCheckOplataClick",
            "designerId": "e6260ddb-3c94-48c1-9759-367f1b1048b4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokKassa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokKassaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");//QueryKassa.getResults",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    user_id:values.get('user_id')",
                    "};",
                    "//var url1 = \"http://localhost/ipay/test.php\";",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var value = fmTekNachKassa.getValues();",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryPayment.newOplata(value,function(results){",
                    "    if (results.success === \"1\"){",
                    "        if (results.status === \"1\"){",
                    "            var ins_id = results.ins_id;",
                    "            Ext.PAY_ID = results.ins_id;",
                    "            var url = results.url;",
                    "            window.open(url,'_blank');",
                    "",
                    "        } else {",
                    "            Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                                 msg: results.msg ,",
                    "                                 buttons: Ext.MessageBox.OK,",
                    "                                 icon: Ext.MessageBox.ERROR",
                    "                                });",
                    "        }",
                    "    } else {",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                             msg: results.msg ,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.ERROR",
                    "                            });",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokKassaClick",
            "designerId": "225ed1cc-bc87-4081-97b7-1b4a7de5779a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNach",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabNachActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "var house_id = values.get('house_id');",
                    "",
                    "//console.log(address_id);",
                    "",
                    "var fmTekNachKassa1 = Ext.getCmp('fmTekNachKassa1');",
                    "var fmTekNachKassa2 = Ext.getCmp('fmTekNachKassa2');",
                    "var fmTekNachKassa3 = Ext.getCmp('fmTekNachKassa3');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "fmInfoApp.getForm().reset();",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var stLgotnik = Ext.data.StoreManager.get(\"StLgotnik\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");",
                    "var stVodomerKassa = Ext.data.StoreManager.get(\"StVodomerKassa\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");",
                    "stWater.removeAll();",
                    "",
                    "stAppartment.load({",
                    "    params: {",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        what:'Appartment',",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if (records.length) {",
                    "            fmInfoApp.getForm().loadRecord(records[0]);",
                    "            var adrec = fmInfoApp.getForm().findField('address').getValue();",
                    "            var fio = fmInfoApp.getForm().findField('nanim').getValue();",
                    "            var kod = fmInfoApp.getForm().findField('address_id').getValue();",
                    "            fmInfoApp.setTitle('ид&nbsp;&nbsp'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +",
                    "                               adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +  fio);",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "stLgotnik.removeAll();",
                    "stLgotnik.load({",
                    "    params: {",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        what:'Lgotnik',",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "stTekOplata.load({",
                    "    params: {",
                    "        what:'AppTekOplata',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "stVodomerKassa.load({",
                    "    params: {",
                    "        what:'AppVodomerKassa',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "",
                    "fmTekNachKassa1.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        house_id: house_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp'",
                    "    },",
                    "    callback: function(records1,operation,success){",
                    "",
                    "        if (success)  {",
                    "",
                    "            if (records1.length) {",
                    "                fmTekNachKassa1.getForm().loadRecord(records1[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "fmTekNachKassa2.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        what_id:address_id,",
                    "        house_id: house_id,",
                    "        address_id: address_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp1'",
                    "    },",
                    "    callback: function(records2,operation,success){",
                    "",
                    "        if (success)  {",
                    "",
                    "            if (records2.length) {",
                    "                fmTekNachKassa2.getForm().loadRecord(records2[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "fmTekNachKassa3.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        house_id: house_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp2'",
                    "    },",
                    "    callback: function(records3,operation,success){",
                    "",
                    "        if (success)  {",
                    "",
                    "            if (records3.length) {",
                    "                fmTekNachKassa3.getForm().loadRecord(records3[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabNachActivate",
            "designerId": "591e7e9d-8640-462f-a75e-b8d54d9b3a32"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabInfoApp",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabInfoAppActivate",
                "implHandler": [
                    "var me = this;",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var house_id = values.get('house_id');",
                    "",
                    "var address = values.get('address');",
                    "var TabFirstPage = me.getTabFirstPage();",
                    "var activeTab = TabFirstPage.getActiveTab();",
                    "var nameactiveTab = activeTab.getXType();",
                    "",
                    "if (house_id  === 22) {",
                    "    var url ='https://is.yuzhny.com/info/osbb_is.php?adrec='+address_id;",
                    "    //var url ='http://localhost/info/osbb_is.php?adrec='+address_id;",
                    "",
                    "} else {",
                    "    var url ='https://is.yuzhny.com/info/osmd_is.php?adrec='+address_id;",
                    "    //var url ='http://localhost/info/osmd_is.php?adrec='+address_id;",
                    "",
                    "}",
                    "",
                    "window.open(url,'_blank');",
                    "",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabInfoAppActivate",
            "designerId": "0b2ab285-16a3-4a8f-921d-63c94425ef92"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppBti",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppBtiActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "var house_id = values.get('house_id');",
                    "var fmAppartment = Ext.getCmp('fmAppartment');",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var stHAppartment = Ext.data.StoreManager.get(\"StHAppartment\");",
                    "var stFamaly = Ext.data.StoreManager.get(\"StFamaly\");",
                    "stAppartment.load({",
                    "    params: {",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        what:'Appartment',",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            stFamaly.removeAll();",
                    "            stFamaly.load({",
                    "                params: {",
                    "                    what_id:address_id,",
                    "                    address_id: address_id,",
                    "                    what:'Famaly',",
                    "                    login:login,",
                    "                    password:password",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            stHAppartment.load({",
                    "                params: {",
                    "                    what_id:address_id,",
                    "                    address_id: address_id,",
                    "                    what:'HistoryAppartment',",
                    "                    login:login,",
                    "                    password:password",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            if (records.length) {",
                    "                fmAppartment.getForm().loadRecord(records[0]);",
                    "                ",
                    "            }",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabAppBtiActivate",
            "designerId": "ef3fab2a-2c5e-4974-94d2-3c75f932aca4"
        }
    ]
}