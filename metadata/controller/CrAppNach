{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "cAppNach",
        "designer|userClassName": "CrAppNach"
    },
    "designerId": "bd1dac73-85bf-43c1-ab20-f5f31c7498c5",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabVoda",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmVoda');",
                    "var btAddNach = Ext.getCmp('btAddNachVoda');",
                    "var btAddPerer = Ext.getCmp('btAddPererVoda');",
                    "var pnPerer = Ext.getCmp('pnPererVoda');",
                    "var grid = Ext.getCmp('grTarifHousesVoda');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить воду и стоки за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать воду и стоки  в  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "pnPerer.setTitle(\"Перерасчет воды и стоков за период \");"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabVodaActivate",
            "designerId": "3f57fcd5-ff4b-46df-86a1-c9c2313ef91c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabPodogrev",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmPodogrev');",
                    "var btAddNach = Ext.getCmp('btAddNachPodogrev');",
                    "var btAddPerer = Ext.getCmp('btAddPererPodogrev');",
                    "var pnPerer = Ext.getCmp('pnPererPodogrev');",
                    "var grid = Ext.getCmp('grTarifHousesPodogrev');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить подогрев за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать подогрев  за  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "pnPerer.setTitle(\"Перерасчет подогрев за период \"+ Ext.Date.format(firstDay, 'F,Y'));"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabPodogrevActivate",
            "designerId": "31be10cd-4b4a-40d9-a20d-aaaaf7e2d813"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabTbo",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabTboActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmTbo');",
                    "var btAddNach = Ext.getCmp('btAddNachTbo');",
                    "var btAddPerer = Ext.getCmp('btAddPererTbo');",
                    "var pnPerer = Ext.getCmp('pnPererTbo');",
                    "var grid = Ext.getCmp('grTarifHousesTbo');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить ТБО за период   \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать ТБО за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "pnPerer.setTitle(\"Перерасчет ТБО за период \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabTboActivate",
            "designerId": "8c4ea801-5259-4b34-95b0-901cf941868a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabKvartplata",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabKvartplataActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmKvartplata');",
                    "var btAddNach = Ext.getCmp('btAddNachKv');",
                    "var btAddPerer = Ext.getCmp('btAddPererKv');",
                    "var pnPerer = Ext.getCmp('pnPererKv');",
                    "var grid = Ext.getCmp('grTarifHousesKv');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "",
                    "",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить квартплату за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать квартплату за  \"+ Ext.Date.format(firstDay, 'F,Y'));"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabKvartplataActivate",
            "designerId": "94060f07-6e92-48ac-94b7-ae31e5b24dc4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppVoda",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachVoda');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'VodaApp',",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachVoda',",
                    "          what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppVodaActivate",
            "designerId": "a9c176b6-23dc-4efc-ba06-6bd86b3f7d89"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppStoki",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppStokiActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachStoki');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'StokiApp',",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachStoki',",
                    "         what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppStokiActivate",
            "designerId": "c2526a7a-dcd5-435f-b0c6-bc782e94ebc9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppPodogrev",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachPodogrev');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PodogrevApp',",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachPodogrev',",
                    "          what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppPodogrevActivate",
            "designerId": "033c0047-8fa8-4dd2-92e8-04977c909123"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppOtoplenie",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppOtoplActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachOtoplenie');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'OtoplenieApp',",
                    "         what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachOtoplenie',",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppOtoplActivate",
            "designerId": "1115d25a-c1df-442d-ba9a-b369fb0f837e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppTbo",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppTboActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachTbo');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'TboApp',",
                    "         what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachTbo',",
                    "         what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppTboActivate",
            "designerId": "80c7808f-a63b-4937-9d51-cfb026bf46e5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppKvartplata",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppKvartplataActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachKvartplata');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'KvartplataApp',",
                    "         what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachKvartplata',",
                    "       what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppKvartplataActivate",
            "designerId": "e1f8db3c-d043-4c8d-bab7-cd024fe42a0b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachVoda",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachVodaSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "//console.log(selected[0].data.data);",
                    "",
                    "//var record = selected[0].data;",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachVodaData',",
                    "            address_id: values.get('address_id'),",
                    "            data:selected[0].data.data,",
                    "            login:values.get('login')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachVodaSelectionChange",
            "designerId": "56720871-beed-4830-a788-68415606c92b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachStoki",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachStokiSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachStokiData',",
                    "            address_id: values.get('address_id'),",
                    "            data:selected[0].data.data,",
                    "            login:values.get('login')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachStokiSelectionChange",
            "designerId": "b9c5aa4f-a870-4655-bcb1-dd10f340b387"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachPodogrev",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachPodogrevSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppPodogrev');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachPodogrevData',",
                    "            address_id: values.get('address_id'),",
                    "            data:selected[0].data.data,",
                    "            login:values.get('login')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachPodogrevSelectionChange",
            "designerId": "d7b82425-8210-44f7-8e0f-40d20f8d3581"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachOtoplenie",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachOtoplenieSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "//console.log(selected[0]);",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachOtoplenieData',",
                    "            address_id: values.get('address_id'),",
                    "            data:selected[0].data.data,",
                    "            login:values.get('login')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachOtoplenieSelectionChange",
            "designerId": "427c8db7-b1ac-42e7-921f-959020ac1525"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachKvartplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachKvartplataSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachKvartplataData',",
                    "            address_id: values.get('address_id'),",
                    "            data:selected[0].data.data,",
                    "            login:values.get('login')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachKvartplataSelectionChange",
            "designerId": "4abf9dc6-90bc-429e-9f1d-4c2b8914c05a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachTbo",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachTboSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachTboData',",
                    "            address_id: values.get('address_id'),",
                    "            data:selected[0].data.data,",
                    "            login:values.get('login')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachTboSelectionChange",
            "designerId": "78ae65d8-9481-492f-8f24-b55b3093470e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachVoda",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachVodaSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachVodaSelectionChange",
            "designerId": "a5a58e3d-bd50-4549-953d-dd65f16983f0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachStoki",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachStokiSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachStokiSelectionChange",
            "designerId": "4c9fb444-52fb-4790-8b28-6a89955a950b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachPodogrev",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachPodogrevSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppPodogrev');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachPodogrevSelectionChange",
            "designerId": "6ee2939c-ef89-4315-b13d-6ae6a46ebb37"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachOtoplenie",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachOtoplenieSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachOtoplenieSelectionChange",
            "designerId": "0a76d811-9799-4867-ac1d-be2f05d7399a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachTbo",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachTboSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachTboSelectionChange",
            "designerId": "e9967916-9427-48ce-b1fa-c2f666f99e9c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachKvartplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachKvartplataSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachKvartplataSelectionChange",
            "designerId": "8c68f903-adf9-4da2-9b66-11c81b6a5aed"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesKv",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesKvSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmKvartplata');",
                    "var btAddPererKv = Ext.getCmp('btAddPererKv');",
                    "var printRaspechatkaHouseAllMgkc = Ext.getCmp('printRaspechatkaHouseAllMgkc');",
                    "var printRaspechatkaHouse = Ext.getCmp('printRaspechatkaHouseMgkc');",
                    "",
                    "var viborTarif = Ext.getCmp('cbTarifKvartplata');",
                    "var btnNachHouse = Ext.getCmp('btnNachHouseKvartplata');",
                    "var tarif = Ext.getCmp('tarKvartplata');",
                    "",
                    "",
                    "",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('allkv').show();",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    printRaspechatkaHouseAllMgkc.setDisabled(false);",
                    "    printRaspechatkaHouse.setDisabled(false);",
                    "",
                    "    viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);",
                    "    btnNachHouse.setDisabled(false);",
                    "    tarif.setValue(0);",
                    "",
                    "    stAddress.removeAll();",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this",
                    "    });",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesKvSelectionChange",
            "designerId": "e4914ff6-204a-493c-ae6f-61675a274cc8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesTbo",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesTboSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmTbo');",
                    "var btAddPerer = Ext.getCmp('btAddPererTbo');",
                    "var viborTarif = Ext.getCmp('cbTarifTbo'); ",
                    "var btnNachHouse = Ext.getCmp('btnNachHouseTbo'); ",
                    "var tarif = Ext.getCmp('tarTbo'); ",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "     viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);   ",
                    "    btnNachHouse.setDisabled(false);                 ",
                    "    tarif.setValue(0);  ",
                    "",
                    "    stAddress.removeAll(); ",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){       ",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this  ",
                    "    });",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesTboSelectionChange",
            "designerId": "946b719d-a7db-4775-8a08-cf4dab1a8be3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesVoda",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesVodaSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmVoda');",
                    "var pnPerer = Ext.getCmp('pnPererVoda');",
                    "var btAddPerer = Ext.getCmp('btAddPererVoda');",
                    "var viborTarif = Ext.getCmp('cbTarifVoda'); ",
                    "var btnNachHouse = Ext.getCmp('btnNachHouseVoda'); ",
                    "var tarif = Ext.getCmp('tarVoda'); ",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);   ",
                    "    btnNachHouse.setDisabled(false);                 ",
                    "    tarif.setValue(0);  ",
                    "",
                    "    stAddress.removeAll(); ",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){       ",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this  ",
                    "    });",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesVodaSelectionChange",
            "designerId": "23d802e2-247a-4eb0-a42a-e8fdfa240e54"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesPodogrev",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesPodogrevSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmPodogrev');",
                    "var pnPerer = Ext.getCmp('pnPererPodogrev');",
                    "var btAddPerer = Ext.getCmp('btAddPererPodogrev');",
                    "var viborTarif = Ext.getCmp('cbTarifTeplo'); ",
                    "var btnNachHouse = Ext.getCmp('btnNachHousePodogrev'); ",
                    "var tarif = Ext.getCmp('tarTeplo'); ",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);   ",
                    "    btnNachHouse.setDisabled(false);                 ",
                    "    tarif.setValue(0); ",
                    "",
                    "    stAddress.removeAll(); ",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){       ",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this  ",
                    "    });",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesPodogrevSelectionChange",
            "designerId": "3f626478-8d7d-4db5-886c-98df624d0568"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachPtn",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachPtnSelectionChange",
                "implHandler": [
                    " var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "        var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "        //LOGIN & PASSWORD",
                    "        var values =stUser.getAt(0);",
                    "        var form = Ext.getCmp('tabFmAppPtn');",
                    "        if (selected.length > 0) {",
                    "            form.getForm().reset();",
                    "            form.getForm().loadRecord(selected[0]);",
                    "            StLgotaNachVoda.load({",
                    "                params: {",
                    "                    what:'LgotaNachPtnData',",
                    "                    address_id: values.get('address_id'),",
                    "                    data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "                    login:values.get('login'),",
                    "                    password:values.get('password')",
                    "                },",
                    "                scope:this",
                    "            });",
                    "        }"
                ],
                "name": "selectionchange"
            },
            "name": "onGrNachPtnSelectionChange",
            "designerId": "54dd3f75-1a90-4886-a141-6e020dc6ca5e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btControlLgot",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtControlLgotClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');",
                    "var report = 'controlLgot';",
                    "var namereport = 'Контроль льгот';",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var tab = tabPnCenter.child('#'+report);",
                    "if (!tab) {",
                    "    tab  = tabPnCenter.add({",
                    "        xtype:'tabReportOrg',",
                    "        title:namereport,",
                    "        id:''+report+''",
                    "    });",
                    "",
                    "}",
                    "var reppan = tab.getComponent(0);",
                    "tabPnCenter.setActiveTab(tab); ",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"controlLgot\",",
                    "    report:report",
                    "};",
                    "",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Отчеты...',",
                    "    msg: 'Загрузка отчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryReport.getResults(value,function(results){",
                    "    if (results.success===\"1\"){ ",
                    "        myMask.close();",
                    "        reppan.update(results.content);",
                    "        Ext.REPORTCONTENT =results.content;",
                    "        Ext.REPORTSQL =results.sql;",
                    "        Ext.REPORTTITLE =report;",
                    "    }else{",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({title: namereport,",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        }); ",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtControlLgotClick",
            "designerId": "bf479523-94b9-4326-9314-8452c6973d4d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btControlDbfLgot",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtControlDbfLgotClick",
                "implHandler": [
                    "// in use",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDbfLgota = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "",
                    "//COMPONENT",
                    "var form = button.findParentByType('form');",
                    "var value = form.getValues();",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');",
                    "var tab = tabPnCenter.child('#tabDbfLgota');",
                    "var usluga =form.getForm().findField('rbUsluga').inputValue;",
                    "StDbfLgota.proxy.setExtraParam('what', usluga);",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"ExportBudjetEmail\"",
                    "};",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Загрузка ДБФ файла',",
                    "    msg: 'Загрузка ДБФ файла со списком льготников.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "",
                    "QueryAddress.updateRecords(value,function(result){",
                    "    if(result.success===\"1\"){ ",
                    "        StDbfLgota.load({",
                    "            params: {",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    if (!tab) {",
                    "                        tab  = tabPnCenter.add({",
                    "                            xtype:'tabDbfLgota'",
                    "                        });",
                    "",
                    "                    }",
                    "                    myMask.close();",
                    "                    tabPnCenter.setActiveTab(tab); ",
                    "",
                    "                }else {",
                    "                    myMask.close();",
                    "",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    } else {",
                    "        myMask.close();",
                    "",
                    "        Ext.MessageBox.show({",
                    "            title: 'Загрузка ДБФ файла ',",
                    "            msg: result.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "    }    ",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtControlDbfLgotClick",
            "designerId": "0b6875d7-3fff-4ea3-a7fc-66468cc58ffa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNachApp",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabNachAppActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var tabPnNachApp = Ext.getCmp('tabNachApp');",
                    "",
                    "var tabFmAppBti = Ext.getCmp('tabFmAppBti');",
                    "var values =stUser.getAt(0);",
                    "tabPnNachApp.setActiveTab(0);",
                    "",
                    "if (values.get('address_id'))",
                    "    stAppartment.load({",
                    "        params: {",
                    "            what_id:address_id,",
                    "            address_id: address_id,",
                    "            what:'Appartment',",
                    "            login:login",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                if (records.length) {",
                    "                    tabFmAppBti.getForm().loadRecord(records[0]);",
                    "",
                    "                    var adrec = tabFmAppBti.getForm().findField('address').getValue();",
                    "                    var fio = tabFmAppBti.getForm().findField('nanim').getValue();",
                    "                    var kod = tabFmAppBti.getForm().findField('address_id').getValue();",
                    "                    tabFmAppBti.setTitle('ид&nbsp;&nbsp'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +",
                    "                                         adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +  fio);",
                    "",
                    "",
                    "            var dogYtke = tabFmAppBti.getForm().findField('dog_ytke').getValue();",
                    "            if(dogYtke!==\"\") {",
                    "                tabFmAppBti.down('#btnOpenWinDogovorYtke').setText('Договір № '+dogYtke);",
                    "            } else {",
                    "                tabFmAppBti.down('#btnOpenWinDogovorYtke').setText('Договіра немає');",
                    "            }",
                    "                    var dogVik = tabFmAppBti.getForm().findField('dog_vik').getValue();",
                    "                    var rdogVik = tabFmAppBti.getForm().findField('rdog_vik').getValue();",
                    "                    if(dogVik !==\"\") {",
                    "                        tabFmAppBti.down('#btnOpenWinDogovorVik').setText('Договір № '+dogVik);",
                    "                    }else {",
                    "                        tabFmAppBti.down('#btnOpenWinDogovorVik').setText('Договіра немає');",
                    "                    }",
                    "                    if(rdogVik !==\"\") {",
                    "                        tabFmAppBti.down('#btnOpenWinDogRestrVik').setText('Договір рестр № '+rdogVik);",
                    "                    }else {",
                    "                        tabFmAppBti.down('#btnOpenWinDogRestrVik').setText('Договіра рестр немає');",
                    "                    }",
                    "                }",
                    "",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabNachAppActivate",
            "designerId": "66a73450-f808-4d6d-b107-3a2622be875c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppPtn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppPtnActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachPtn');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PtnApp',",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachPtn',",
                    "          what_id:address_id,",
                    "        address_id: address_id,",
                    "        login:login",
                    "    }",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabFmAppPtnActivate",
            "designerId": "6a89c9be-62c5-482f-8a28-59810621d90f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppTbo",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppTboActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "var tabPnNachApp = Ext.getCmp('tabPnNachApp');",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachTbo');",
                    "",
                    "var values =stUser.getAt(0);",
                    "if (values.get('address_id'))",
                    "   ",
                    "        StTekNach.load({",
                    "            params: {",
                    "                what:'TboApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    form.getForm().reset();",
                    "                    gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        ",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabAppTboActivate",
            "designerId": "f16acb92-7601-499f-8561-4c6abc28b9ce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppVoda",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppVodaActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachVoda');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "",
                    "gridNachisl.getView().getSelectionModel().deselectAll();",
                    "form.getForm().reset();",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'VodaApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            gridNachisl.getView().refresh();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this        });",
                    "",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabAppVodaActivate",
            "designerId": "3e956f1c-8f1c-471d-830d-fa8e42050079"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppStoki",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppStokiActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachStoki');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "",
                    "gridNachisl.getView().getSelectionModel().deselectAll();",
                    "form.getForm().reset();",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'StokiApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            gridNachisl.getView().refresh();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this        });",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabAppStokiActivate",
            "designerId": "6e65878c-6d34-4732-adbb-2f249b90182e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppPtn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppPtnActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachPtn');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppPtn');",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PtnApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            gridNachisl.getView().refresh();",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabAppPtnActivate",
            "designerId": "e77baf13-b0ec-4f8c-b211-ac0bed615937"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppPodogrev",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppPodogrevActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachPodogrev');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppPodogrev');",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PodogrevApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            gridNachisl.getView().refresh();",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabAppPodogrevActivate",
            "designerId": "d20c9f16-7136-4d34-8212-f01725c3751b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppOtoplenie",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppOtoplenieActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachOtoplenie');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'OtoplenieApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabAppOtoplenieActivate",
            "designerId": "b35d5807-a0b0-4dc2-abad-57b1b3bf3ced"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppKvartplata",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppKvartplataActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachKvartplata');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'KvartplataApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            gridNachisl.getView().refresh();",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabAppKvartplataActivate",
            "designerId": "f0592261-4abb-4825-b9a2-c9599c9ee905"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppMgkc",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppMgkcActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachMgkc');",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppMgkc');",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'KvartplataApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            gridNachisl.getView().refresh();",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabAppMgkcActivate",
            "designerId": "eef988ba-d3dc-4f3d-95f2-3ccd22ce614e"
        }
    ]
}