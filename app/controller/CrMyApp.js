/*
 * File: app/controller/CrMyApp.js
 * Date: Wed Dec 23 2020 01:19:05 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('yis.controller.CrMyApp', {
    extend: 'Ext.app.Controller',
    alias: 'controller.crMyApp',

    refs: {
        FmAppartment: '#fmAppartment',
        PnAppBti: '#pnAppBti',
        TabFirstPage: '#tabFirstPage',
        cbMyFlat: '#cbMyFlat',
        tabOplata: '#tabOplata',
        TabAppNachisleno: '#tabAppNachisleno',
        VpIsCity: 'vpIsCity',
        TekNachApp: '#tekNachApp',
        TekNachOplata: '#tekNachOplata'
    },

    control: {
        "#listMenuMyFlat": {
            itemclick: 'onListMenuMyFlatItemClick'
        },
        "#listMenuAddMyFlat": {
            itemclick: 'onListMenuAddMyFlatItemClick'
        },
        "#grAddress": {
            itemdblclick: 'onGrAddressItemDblClick'
        },
        "#tabKassa": {
            activate: 'onTabKassaActivate'
        },
        "#tabMarfinBank": {
            activate: 'onTabMarfinBankActivate'
        },
        "#tabAppOplata": {
            activate: 'onTabAppOplataActivate'
        },
        "#tabMenuHome": {
            activate: 'onTabMenuHomeActivate'
        },
        "#grAppVodomerKassa": {
            selectionchange: 'onGrAppVodomerKassaSelectionChange'
        },
        "#grAppVodomerKassa1": {
            selectionchange: 'onGrAppVodomerKassa1SelectionChange'
        },
        "#grAppVodomerKassa2": {
            selectionchange: 'onGrAppVodomerKassa2SelectionChange'
        },
        "#insTekPokVodKassa": {
            click: 'onInsTekPokVodKassaClick'
        },
        "#insTekPokVodKassa1": {
            click: 'onInsTekPokVodKassa1Click'
        },
        "#insTekPokVodKassa2": {
            click: 'onInsTekPokVodKassa2Click'
        },
        "#btnAppNachisleno": {
            click: 'onBtnAppNachislenoClick'
        },
        "#btnAppOplata": {
            click: 'onBtnAppOplataClick'
        },
        "#btnAppTarif": {
            click: 'onBtnAppTarifClick'
        },
        "#btnTekNach": {
            click: 'onBtnTekNachClick'
        },
        "#btnmapcity": {
            click: 'onBtnmapcityClick'
        },
        "#btnpoint": {
            click: 'onBtnpointClick'
        },
        "#grAppHistory": {
            selectionchange: 'onGrAppHistorySelectionChange'
        },
        "#grPayment": {
            selectionchange: 'onGrPaymentSelectionChange'
        },
        "#newValueVodomer": {
            specialkey: 'onNewValueVodomerSpecialkey'
        },
        "#newValueVodomer1": {
            specialkey: 'onNewValueVodomer1Specialkey'
        },
        "#newValueVodomer2": {
            specialkey: 'onNewValueVodomer2Specialkey'
        },
        "#newOplataKassa": {
            specialkey: 'onNewOplataKassaSpecialkey'
        },
        "#delTekPokVodKassa": {
            click: 'onDelTekPokVodKassaClick'
        },
        "#delTekPokVodKassa1": {
            click: 'onDelTekPokVodKassa1Click'
        },
        "#insOplataMarfinBank": {
            click: 'onInsOplataMarfinBankClick'
        },
        "#printRaschListok": {
            click: 'onPrintRaschListokClick'
        },
        "#insTekOplataVik": {
            click: 'onInsTekOplataVikClick'
        },
        "#btnIpayVisa": {
            click: 'onBtnIpayVisaClick'
        },
        "#winIpay1": {
            close: 'onWinIpayClose'
        },
        "#btnMarfinBank": {
            click: 'onBtnMarfinBankClick'
        },
        "#checkOplata": {
            click: 'onCheckOplataClick'
        },
        "#insTekPokKassa": {
            click: 'onInsTekPokKassaClick'
        },
        "#tabNach": {
            activate: 'onTabNachActivate'
        },
        "#tabInfoApp": {
            activate: 'onTabInfoAppActivate'
        },
        "#tabAppBti": {
            activate: 'onTabAppBtiActivate'
        }
    },

    onListMenuMyFlatItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;
        // STORE
        var StUser = Ext.data.StoreManager.get("StUser");

        //TAB_PANEL

        var TabFirstPage = me.getTabFirstPage();
        var activeTab = TabFirstPage.getActiveTab();
        var nameactiveTab = activeTab.getXType();
           // console.log(record.data);

        if(StUser.data.length){

            var btnIpayVisa = Ext.getCmp("btnIpayVisa");
            var btnMarfinBank = Ext.getCmp("btnMarfinBank");


            var values =StUser.getAt(0);

            var selected = record.data;
          //  console.log(selected);

            if (selected){

                values.set({
                    'address_id':selected.address_id,
                    'raion_id':selected.raion_id,
                    'house_id':selected.house_id,
                    'address':selected.address
                });
                StUser.sync();

                //КВАРТИРЫ
                btnIpayVisa.show();
                btnMarfinBank.show();

                TabFirstPage.child('#tabLogin').tab.hide();
                TabFirstPage.child('#tabNach').tab.show();
                TabFirstPage.child('#tabAppBti').tab.show();
                TabFirstPage.child('#tabNachApp').tab.show();
                TabFirstPage.child('#tabAppVodomer').tab.show();
                TabFirstPage.child('#tabAppTeplomer').tab.show();
                TabFirstPage.child('#tabKassa').tab.hide();
                TabFirstPage.child('#tabMarfinBank').tab.hide();
                TabFirstPage.child('#tabInfoApp').tab.show();

                TabFirstPage.child('#tabAppOplata').tab.show();

                var tab = TabFirstPage.child('#tabNach');
                tab.setTitle(selected.address);


                //TabFirstPage.setActiveTab('tabNach');


                //СПРАВОЧНИК
                if (nameactiveTab==='tabnach'){
                    this.onTabNachActivate();
                }
                TabFirstPage.setActiveTab('tabNach');
                }


        }

    },

    onListMenuAddMyFlatItemClick: function(dataview, record, item, index, e, eOpts) {
        var StRaion = Ext.data.StoreManager.get('StRaion');
        var stAddress = Ext.data.StoreManager.get('StAddress');
        stAddress.removeAll();
        StRaion.load({
            params: {
                what:'raion'
            },
            scope:this
        });
        var winAddMyFlat = Ext.ClassManager.instantiateByAlias('widget.winAddMyFlat');
        winAddMyFlat.show();
    },

    onGrAddressItemDblClick: function(dataview, record, item, index, e, eOpts) {
        //console.log(record.data);
        var stUser = Ext.data.StoreManager.get("StUser");
        var stlogin =stUser.getAt(0);

        var stMyFlat = Ext.data.StoreManager.get("StMyFlat");
        Ext.MessageBox.prompt(record.data.address,' Введите cекретный код квартиры:',
        function(btn,text){
            if (btn == 'ok') {
                QueryUserLogin.checkMyFlat(record.data,stlogin.data,text,function(results){
                    if (results.success){
                        stMyFlat.load({
                            params: {
                                user_id:stlogin.get('user_id')
                            },
                            scope:this
                        });

                    }else if (results.nokey){
                        Ext.MessageBox.show({
                            title: 'Моя квартира',
                            msg: 'Секретный код неверный',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        });
                    }else if (results.myflat){
                        Ext.MessageBox.show({
                            title: 'Моя квартира',
                            msg: 'Квартира уже в списке',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        });
                    }else if (results.noid){
                        Ext.MessageBox.show({
                            title: 'Моя квартира',
                            msg: 'Ошибка при записи в базу данных',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        });
                    }
                });
            }
        });

    },

    onTabKassaActivate: function(component, eOpts) {
        //in use
        //STORE
        var me = this;
        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');


        //LOGIKA
        //FORM
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');
        var fmInfoApp = Ext.getCmp('fmInfoApp1');
        fmInfoApp.down('#delTekPokVodKassa').setDisabled(true);
        fmInfoApp.down('#insTekPokVodKassa').setDisabled(true);
        var fsOsmd = Ext.getCmp('fsOsmd');




        //STORE
        //var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");//QueryKassa.getResults
        var stTekOplata = Ext.data.StoreManager.get("StTekOplata");//QueryKassa.getResults
        var stVodomerKassa = Ext.data.StoreManager.get("StVodomerKassa");//QueryVodomer.getResults  <AppVodomer>

        stVodomerKassa.load({
            params: {
                what:'AppVodomerKassa',
                what_id: address_id,
                address_id: address_id,
                login:login
            },
            scope:this
        });


        fmTekNachKassa.getForm().reset();

        stTekNachKassa.load({
            params: {
                login:login,
                what_id:address_id,
                address_id: address_id,
                raion_id:raion_id,
                what:'TekNachAllAppBank'
            },
            callback: function(records,operation,success){
                // console.log(success);
                // console.log(values);


                if (success)  {
                    // me.resetFmKassa();
                    if (records.length) {
                        fmTekNachKassa.getForm().loadRecord(records[0]);
                        var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();
                        var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();
                        var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();
                        var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();
                        var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();
                        var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();
                        var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();
                        var ipay =  records[0].data.ipay;

                        var dolg = fmTekNachKassa.getForm().findField('dolg').getValue();


                        if (dolg1 > 0){
                            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);
                        }

                        if (dolg2 > 0){
                            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(true);
                        }
                        if (dolg3 > 0){
                            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);
                        }
                        if (dolg4 > 0){
                            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(true);
                        }
                        if (ipay === "1"){
                            fsOsmd.setTitle("ОСББ");

                            if (dolg5 > 0){
                                fmTekNachKassa.getForm().findField('cbNext5').setDisabled(false);
                            }else{
                                fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);
                            }
                        } else {
                            fsOsmd.setTitle("у IPAY нет договора на прием платежей по кварплате");
                            fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);

                        }
                        if (dolg6 > 0){
                            fmTekNachKassa.getForm().findField('cbNext6').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);
                        }

                        if (dolg7 > 0){
                            fmTekNachKassa.getForm().findField('cbNext7').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);
                        }

                        if (dolg  > 0){
                            fmTekNachKassa.getForm().findField('cbNext').setDisabled(false);
                        }

                        fmTekNachKassa.down('#account').setDisabled(true);

                    }
                }

            },
            scope:this
        });


        stTekOplata.load({
            params: {
                what:'AppTekOplata',
                what_id: address_id,
                address_id: address_id,
                login:login
            },
            scope:this
        });

    },

    onTabMarfinBankActivate: function(component, eOpts) {
        //in use
        //STORE
        var me = this;
        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');

        //LOGIKA
        //FORM
        var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');
        var fsKvartplata = Ext.getCmp('fsKvartplata');




        //STORE
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");//QueryKassa.getResults
        var StPayment = Ext.data.StoreManager.get("StPayment");
        //var stVodomerKassa = Ext.data.StoreManager.get("StVodomerKassa");//QueryVodomer.getResults  <AppVodomer>


        fmTekNachKassa.getForm().reset();

        stTekNachKassa.load({
            params: {
                login:login,
                what_id:address_id,
                address_id: address_id,
                raion_id:raion_id,
                what:'TekNachAllAppBank'
            },
            callback: function(records,operation,success){
                // console.log(success);
                // console.log(records[0]);


                if (success)  {
                    //me.resetFmMarfin();
                    if (records.length) {
                        fmTekNachKassa.getForm().loadRecord(records[0]);
                        var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();
                        var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();
                        var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();
                        var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();
                        var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();
                        var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();
                        var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();

                        var dolg = fmTekNachKassa.getForm().findField('dolg').getValue();
                        var rko = fmTekNachKassa.getForm().findField('rko').getValue();


                        if (dolg1 > 0){
                            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);
                        }
                        if (dolg2 > 0){
                            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(true);
                        }
                        if (dolg3 > 0){
                            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);
                        }
                        if (dolg4 > 0){
                            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(true);
                        }
                        if (rko === "0"){
                            fmTekNachKassa.getForm().findField('cbNext5').hide();
                            fsKvartplata.setTitle("У банка нет договора на прием платежей по кварплате");

                        }else{
                            fmTekNachKassa.getForm().findField('cbNext5').show();
                            fsKvartplata.setTitle("ОСМД");
                            if (dolg5 > 0){
                                fmTekNachKassa.getForm().findField('cbNext5').setDisabled(false);
                            }else{
                                fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);
                            }
                        }
                        if (dolg6 > 0){
                            fmTekNachKassa.getForm().findField('cbNext6').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);
                        }

                        if (dolg7 > 0){
                            fmTekNachKassa.getForm().findField('cbNext7').setDisabled(false);
                        }else{
                            fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);
                        }
                        if (dolg > 0){

                            fmTekNachKassa.getForm().findField('cbNext').setDisabled(false);
                        }

                    }
                }

            },
            scope:this
        });


        StPayment.load({
            params: {
                what:'MarfinPayment',
                what_id: address_id,
                address_id: address_id,
                login:login
            },
            scope:this
        });

    },

    onTabAppOplataActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StOplata = Ext.data.StoreManager.get("StOplata");

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var address = values.get('address');
        var house_id = values.get('house_id');
        var prixod_id = values.get('prixod_id');

        StOplata.load({
            params: {
                what:'OplataApp',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });
    },

    onTabMenuHomeActivate: function(component, eOpts) {
        //in use
        var me = this;

        //TAB_PANEL

        var TabFirstPage = me.getTabFirstPage();

        //LOGIKA
        TabFirstPage.child('#tabLogin').tab.show();
        TabFirstPage.child('#tabNach').tab.hide();
        TabFirstPage.child('#tabAppBti').tab.hide();
        TabFirstPage.child('#tabMarfinBank').tab.hide();
        //TabFirstPage.child('#tabNachAppVoda').tab.hide();
        //TabFirstPage.child('#tabNachAppTeplo').tab.hide();
        TabFirstPage.child('#tabNachApp').tab.hide();
        TabFirstPage.child('#tabAppVodomer').tab.hide();
        TabFirstPage.child('#tabAppTeplomer').tab.hide();
        TabFirstPage.child('#tabInfoApp').tab.hide();
        TabFirstPage.child('#tabKassa').tab.hide();
        TabFirstPage.child('#tabAppOplata').tab.hide();


        TabFirstPage.setActiveTab('tabLogin');
    },

    onGrAppVodomerKassaSelectionChange: function(model, selected, eOpts) {
        //in use
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');

        //FORMA

        var fmInfoApp = Ext.getCmp('fmInfoApp1');


        //LOGIKA

        //console.log(selections);

        if (selected.length){

            stTekPokVodomera.load({
                params: {
                    login:login,
                    address_id: address_id,
                    what:'TekPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        //  console.log(records[0]);
                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                        fmInfoApp.getForm().findField('newValue').setDisabled(false);
                        fmInfoApp.down('#delTekPokVodKassa').setDisabled(false);
                        fmInfoApp.getForm().findField('newValue').setValue(0);
                        fmInfoApp.getForm().findField('newValue').focus();

                    }
                },
                scope:this
            });
        }
    },

    onGrAppVodomerKassa1SelectionChange: function(model, selected, eOpts) {

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');
        var fmInfoApp = Ext.getCmp('fmInfoApp');
        if (selected.length){

            stTekPokVodomera.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'TekPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                        fmInfoApp.down('#delTekPokVodKassa1').setDisabled(false);
                        fmInfoApp.getForm().findField('newValue').setValue("0").focus();
                    }
                },
                scope:this
            });
        }
    },

    onGrAppVodomerKassa2SelectionChange: function(model, selected, eOpts) {
        //in use
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');

        //FORMA

        var fmInfoApp1 = Ext.getCmp('fmInfoApp2');


        //LOGIKA

        //console.log(selections);

        if (selected.length){

            stTekPokVodomera.load({
                params: {
                    login:login,
                    address_id: address_id,
                    what:'TekPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                callback: function(records,operation,success){
                    //  console.log(success);
                    if(success){
                        //  console.log(success);

                        fmInfoApp1.getForm().findField('tek').setValue(records[0].get('tek'));
                        fmInfoApp1.getForm().findField('pred').setValue(records[0].get('pred'));
                        fmInfoApp1.getForm().findField('kub').setValue(records[0].get('kub'));
                        fmInfoApp1.getForm().findField('fdate').setValue(records[0].get('data'));
                        fmInfoApp1.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                        fmInfoApp1.getForm().findField('type').setValue(records[0].get('type'));
                        fmInfoApp1.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                        fmInfoApp1.getForm().findField('place').setValue(records[0].get('place'));
                        fmInfoApp1.getForm().findField('newValue').setDisabled(false);
                        fmInfoApp1.down('#delTekPokVodKassa2').setDisabled(false);
                        fmInfoApp1.getForm().findField('newValue').setValue(0);
                        fmInfoApp1.getForm().findField('newValue').focus();

                    }
                },
                scope:this
            });
        }
    },

    onInsTekPokVodKassaClick: function(button, e, eOpts) {
        this.InsTekPokVodomera();
    },

    onInsTekPokVodKassa1Click: function(button, e, eOpts) {
        this.InsTekPokVodomera1();
    },

    onInsTekPokVodKassa2Click: function(button, e, eOpts) {
        this.InsTekPokVodomera2();
    },

    onBtnAppNachislenoClick: function(button, e, eOpts) {
        //in use
        var me =this;
        var comboMyFlat = me.getCbMyFlat();
        var address=comboMyFlat.getValue();
        var change = false;
        var store = Ext.data.StoreManager.get("StNachisleno");
        if(store.data.length){
            var addressid = store.getAt(0).get('address_id');
            if (address!==addressid){
                change=true;

            }
        }
        var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');
        var tab = tabFirstPage.child('#tabAppNachisleno');
        if (!tab) {
            store.load({
                params: {
                    what:'nachisleno',
                    what_id: address
                },
                scope:this
            });
            var newtab  = tabFirstPage.add({
                xtype:'tabAppNachisleno'
            });
            tabFirstPage.setActiveTab(newtab);
        }else{

            if(change){
                store.load({
                    params: {
                        what:'nachisleno',
                        what_id: address
                    },
                    scope:this
                });

            }
            tabFirstPage.setActiveTab(tab);
        }
    },

    onBtnAppOplataClick: function(button, e, eOpts) {
        //in use
        var me =this;
        var comboMyFlat = me.getCbMyFlat();
        var address=comboMyFlat.getValue();
        var change = false;
        var store = Ext.data.StoreManager.get("StOplata");
        if(store.data.length){
            var addressid = store.getAt(0).get('address_id');
            if (address!==addressid){
                change=true;

            }
        }
        var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');
        var tab = tabFirstPage.child('#tabOplata');
        //var tab = me.getPnAppBti();
        //console.log(tab);
        if (!tab) {
            //    console.log(change);
            store.load({
                params: {
                    what:'Oplata',
                    what_id: address
                },
                scope:this
            });
            var newtab  = tabFirstPage.add({
                xtype:'tabOplata'
            });
            tabFirstPage.setActiveTab(newtab);
        }else{
            //  console.log(change);
            if(change){
                store.load({
                    params: {
                        what:'Oplata',
                        what_id: address
                    },
                    scope:this
                });

            }
            tabFirstPage.setActiveTab(tab);
        }
    },

    onBtnAppTarifClick: function(button, e, eOpts) {
        var map= Ext.getCmp('mapPnViK');
        //console.log(map);
        //in use
        var me =this;

        var comboMyFlat = me.getCbMyFlat();
        var address=comboMyFlat.getValue();
        var change = false;
        var store = Ext.data.StoreManager.get("StAppTarif");
        if(store.data.length){
            var addressid = store.getAt(0).get('address_id');
            if (address!==addressid){
                change=true;
            }
        }
        var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');
        var tab = tabFirstPage.child('#pnAppTarif');
        //var tab = me.getPnAppBti();
        //console.log(tab);
        if (!tab) {
            //    console.log(change);
            store.load({
                params: {
                    what:'AppTarif',
                    what_id: address
                },
                scope:this
            });
            var newtab  = tabFirstPage.add({
                xtype:'pnAppTarif'
            });
            tabFirstPage.setActiveTab(newtab);
        }else{
            //console.log(change);
            if(change){
                store.load({
                    params: {
                        what:'AppTarif',
                        what_id: address
                    },
                    scope:this
                });

            }
            tabFirstPage.setActiveTab(tab);
        }
    },

    onBtnTekNachClick: function(button, e, eOpts) {
        //in use
        var me =this;
        var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');
        var tab = tabFirstPage.child('#pnTekNach');
        //var tab=tabFirstPage.getComponent('pnTekNach');
        //console.log(tab);
        if (!tab) {
            var newtab  = tabFirstPage.add({
                xtype:'pnTekNach'
            });
            tabFirstPage.setActiveTab(newtab);
        }else{

            tabFirstPage.setActiveTab(tab);
        }

    },

    onBtnmapcityClick: function(button, e, eOpts) {
        //in use
        var me =this;
        var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');
        var tab = tabFirstPage.child('#pnCityMap');
        if (!tab) {

            var newtab  = tabFirstPage.add({
                xtype:'pnCityMap'
            });

            tabFirstPage.setActiveTab(newtab);
        }else{

            tabFirstPage.setActiveTab(tab);
        }


    },

    onBtnpointClick: function(button, e, eOpts) {
        //in use
        var me =this;
        var tabFirstPage = me.getVpIsCity().down('#tabFirstPage');
        var tab = tabFirstPage.child('#mapPnPaymentCenters');
        if (!tab) {

            var newtab  = tabFirstPage.add({
                xtype:'mapPnPaymentCenters'
            });

            tabFirstPage.setActiveTab(newtab);
        }else{

            tabFirstPage.setActiveTab(tab);
        }

    },

    onGrAppHistorySelectionChange: function(model, selected, eOpts) {

        //LOGIN & PASSWORD
        var form = Ext.getCmp('fmAppartment');
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
        }
    },

    onGrPaymentSelectionChange: function(model, selected, eOpts) {
        //LOGIN & PASSWORD
        var form = Ext.getCmp('fmParamsPay');
        if (selected.length > 0 && selected[0].data.chek === 9) {
            var sum =Ext.util.Format.number(selected[0].data.summa,'0,000.00');
            var com =Ext.util.Format.number(selected[0].data.commission,'0,000.00');
        //console.log(sum);
         //   console.log(com);

            form.getForm().reset();
            form.getForm().findField('payment_id').setValue(selected[0].data.payment_id);
            form.getForm().findField('summa').setValue(selected[0].data.summa+selected[0].data.commission);
        }
    },

    onNewValueVodomerSpecialkey: function(field, e, eOpts) {
        // in use
        var value = field.getValue();
        if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {
            this.InsTekPokVodomera();
        }
    },

    onNewValueVodomer1Specialkey: function(field, e, eOpts) {
        // in use
        var value = field.getValue();
        if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {
            this.InsTekPokVodomera1();
        }
    },

    onNewValueVodomer2Specialkey: function(field, e, eOpts) {
        // in use
        var value = field.getValue();
        if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {
            this.InsTekPokVodomera2();
        }
    },

    onNewOplataKassaSpecialkey: function(field, e, eOpts) {
        // in use
        //console.log(field.getFocusEl());
        var value = field.getValue();
        if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {
            this.insNewOplata();
        }
    },

    onDelTekPokVodKassaClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");//QueryVodomer.getResults <TekPokVodomera>
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            raion_id:values.get('raion_id'),
            what:'AVodomer'

        };

        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');
        var fmInfoApp = Ext.getCmp('fmInfoApp');
        var value = fmInfoApp.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        //console.log(value);
        Ext.MessageBox.confirm({
            title: 'Удаление последних показаний счетчика воды',
            msg: 'Вы удаляете последнее показание по счетчику <br>тип воды <b>'+value.type+
            '</b> <br>Место установки <b>'+value.place+'</b><br>Показание<b>'+value.tek+
            '</b><br>Подтвердите или отмените свои действия.',
            buttons: Ext.MessageBox.OKCANCEL,
            icon: Ext.MessageBox.ERROR,
            buttonText:{
                ok:'подтвеждаю',
                cancel:'отмена'
            },
            fn:function(btn,newValue){
                if(btn=='ok'){
                    QueryVodomer.delPokVodomera(value,function(results){
                        if (results.success === "1"){
                            Ext.MessageBox.show({title: 'Удаление последних показаний ',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                            stTekNachKassa.load({
                                params: {
                                    login:value.login,
                                    password:value.password,
                                    raion_id: value.raion_id,
                                    what_id: value.address_id,
                                    address_id: value.address_id,
                                    what:'TekNachAllApp'
                                },
                                callback: function(rec,operation,succ){
                                    if(succ){
                                        fmTekNachKassa.getForm().loadRecord(rec[0]);
                                    }
                                },
                                scope:this
                            });

                            stTekPokVodomera.load({
                                params: {
                                    what:'TekPokVodomera',
                                    what_id: value.address_id,
                                    address_id: value.address_id,
                                    vodomer_id: value.vodomer_id,
                                    password:value.password,
                                    login:value.login
                                },
                                callback: function(records,operation,success){
                                    if(success){
                                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                        fmInfoApp.down('#delTekPokVodKassa').setDisabled(true);


                                    }
                                },
                                scope:this
                            });
                            Ext.MessageBox.show({title: 'Удаление последних показаний ',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                            me.resetFmKassa();
                            fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                        }else{
                            Ext.MessageBox.show({title: 'Удаление последних показаний счетчика воды',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                        }
                    });
                }
            }
        });

    },

    onDelTekPokVodKassa1Click: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE



        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");//QueryVodomer.getResults <TekPokVodomera>
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            raion_id:values.get('raion_id'),
            what:'AVodomer'

        };

        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa1');
        var fmInfoApp = Ext.getCmp('fmInfoApp1');
        var value = fmInfoApp.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        //console.log(value);
        Ext.MessageBox.confirm({
            title: 'Удаление последних показаний счетчика воды',
            msg: 'Вы удаляете последнее показание по счетчику <br>тип воды <b>'+value.type+
            '</b> <br>Место установки <b>'+value.place+'</b><br>Показание<b>'+value.tek+
            '</b><br>Подтвердите или отмените свои действия.',
            buttons: Ext.MessageBox.OKCANCEL,
            icon: Ext.MessageBox.ERROR,
            buttonText:{
                ok:'подтвеждаю',
                cancel:'отмена'
            },
            fn:function(btn,newValue){
                if(btn=='ok'){
                    QueryVodomer.delPokVodomera(value,function(results){
                        if (results.success === "1"){
                            Ext.MessageBox.show({title: 'Удаление последних показаний ',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                            stTekNachKassa.load({
                                params: {
                                    login:value.login,
                                    raion_id: value.raion_id,
                                    what_id: value.address_id,
                                    address_id: value.address_id,
                                    what:'TekNachAllApp'
                                },
                                callback: function(rec,operation,succ){
                                    if(succ){
                                        fmTekNachKassa.getForm().loadRecord(rec[0]);
                                    }
                                },
                                scope:this
                            });

                            stTekPokVodomera.load({
                                params: {
                                    what:'TekPokVodomera',
                                    what_id: value.address_id,
                                    address_id: value.address_id,
                                    vodomer_id: value.vodomer_id,
                                    login:value.login
                                },
                                callback: function(records,operation,success){
                                    if(success){
                                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                        fmInfoApp.down('#delTekPokVodKassa1').setDisabled(true);


                                    }
                                },
                                scope:this
                            });
                            Ext.MessageBox.show({title: 'Удаление последних показаний ',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                            me.resetFmKassa();
                            fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                        }else{
                            Ext.MessageBox.show({title: 'Удаление последних показаний счетчика воды',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                        }
                    });
                }
            }
        });

    },

    onInsOplataMarfinBankClick: function(button, e, eOpts) {

        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stPayment = Ext.data.StoreManager.get("StPayment");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            user_id:values.get('user_id')
        };
        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');
        var fmParamsPay = Ext.getCmp('fmParamsPay');

        var value = fmTekNachKassa.getValues();
        //LOGIKA





        Ext.Object.merge(value, params);
        QueryPaymentMarfin.newOplata(value,function(results){
            if (results.success === "1"){
                           // console.log(results.status);

                    fmParamsPay.getForm().findField('payment_id').setValue(results.ins_id);
                    fmParamsPay.getForm().findField('summa').setValue(results.summa);
                    fmParamsPay.getForm().findField('sign').setValue(results.sign);
                    fmParamsPay.getForm().findField('xml').setValue(results.xml);


                    stPayment.load({
                        params: {
                            what:'MarfinPayment',
                            login:value.login,
                            password:value.password,
                            pay_id: results.ins_id,
                            address_id: value.address_id
                        },
                        scope:this
                    });



            } else {
                Ext.MessageBox.show({title: 'Ввод оплаты',
                    msg: results.msg ,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });
            }
        });

    },

    onPrintRaschListokClick: function(button, e, eOpts) {
        //in use
        var me = this;
        var StUser = Ext.data.StoreManager.get("StUser");
        var StReport = Ext.data.StoreManager.get("StReport");
        var values =StUser.getAt(0);
        var address_id = values.data.address_id;
        var raion_id = values.data.raion_id;
        //console.log(values);
        var usertype = 1;

        var tabFirstPage =  Ext.getCmp('tabFirstPage');
        if (address_id) {
            var report = 'raspechatkaOplataApp';
            var namereport = 'Расчетка';
            var value = {
                login:values.get('login'),
                report:report,
                what:report,
                raion_id: raion_id,
                address_id: address_id
            };
            var tab = tabFirstPage.child('#'+report);
            if (!tab) {
                tab  = tabFirstPage.add({
                    xtype:'tabReport',
                    title:namereport,
                    id:''+report+''
                });

            }
            tabFirstPage.setActiveTab(tab);
            var reppan = tab.getComponent(0);
            // Basic mask:
            var myMask= Ext.Msg.show({
                title:'Отчеты...',
                msg: 'Загрузка отчета.Ожидайте...',
                buttons: Ext.Msg.CANCEL,
                wait: true,
                modal: true,
                icon: Ext.Msg.INFO
            });
            QueryReport.getResults(value,function(data){
                if (data){
                    reppan.update(data.content);
                    Ext.REPORTCONTENT =data.content;
                    Ext.REPORTSQL =data.sql;
                    Ext.REPORTTITLE =report;
                    myMask.close();

                } else {
                    Ext.MessageBox.show({
                        title: 'Ошибка ',
                        msg: 'Документ не создан',
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.ERROR
                    });
                    myMask.close();

                }
            });

        }
    },

    onInsTekOplataVikClick: function(button, e, eOpts) {

        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stTekOplata = Ext.data.StoreManager.get("StTekOplata");//QueryKassa.getResults
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            user_id:values.get('user_id'),
            what:'oplataVik'

        };

        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');
        var value = fmTekNachKassa.getValues();
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryPayment.newOplata(value,function(results){
            console.log(results);
        if (results.success === "1"){
            if (results.status === "1"){
                var ins_id = results.ins_id;
                var url = results.url;
                var vp = Ext.getCmp('tabFirstPage');
                var h = vp.getHeight();
                var w = vp.getWidth();
                var winpaym = new Ext.Window({
                    title : "Оплата",
                    modal : true,
                    width : w,
                    height: h,
                    layout : 'fit',
                    items : [{
                        xtype : "component",
                        id: "iframe1",
                        autoEl : {
                            tag : "iframe",
                            src : url
                        }
                    }],
                    listeners:{
                        beforeclose:function(){
                            var btn =  Ext.dom.Query.select('.button button-long site_url_ok');
                            var myMask= Ext.Msg.show({
                                title:'Оплата по системе iPAY...',
                                msg: 'Подтверждение оплаты.Ожидайте...',
                                buttons: Ext.Msg.CANCEL,
                                wait: true,
                                modal: true,
                                icon: Ext.Msg.INFO
                            });
                            var task =  {
                                run: function(){
                                    var value2 = {
                                        login:values.get('login'),
                                        password:values.get('password'),
                                        ins_id:ins_id,
                                        what:'PaymentStatus'
                                    };
                                    QueryPayment.getResults(value2,function(results){
                                        var status = results.data[0].status;
                                        if (status === "5"){
                                            Ext.TaskManager.stop(task);
                                            myMask.close();
                                            fmTekNachKassa.getForm().reset();

                                            stTekNachKassa.load({
                                                params: {
                                                    what:'TekNachAllApp',
                                                    login:value.login,
                                                    password:value.password,
                                                    what_id: value.address_id,
                                                    address_id: value.address_id
                                                },
                                                callback: function(records,operation,success){
                                                    if (success)  {
                                                        me.resetFmKassa();
                                                        if (records.length) {
                                                            fmTekNachKassa.getForm().loadRecord(records[0]);
                                                            var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();
                                                            var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();
                                                            var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();
                                                            var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();
                                                            var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();
                                                            var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();
                                                            var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();

                                                            if (dolg1 <=0 && dolg2 <=0){
                                                                fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);
                                                            }
                                                            if (dolg3 <=0 && dolg4 <=0){
                                                                fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);
                                                            }
                                                            if (dolg5<=0){
                                                                fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);
                                                            }
                                                            if (dolg6<=0){
                                                                fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);
                                                            }
                                                            if (dolg7<=0){
                                                                fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);
                                                            }
                                                        }
                                                    }
                                                },
                                                scope:this
                                            });
                                            stTekOplata.load({
                                                params: {
                                                    what:'AppTekOplata',
                                                    login:value.login,
                                                    password:value.password,
                                                    what_id: value.address_id,
                                                    address_id: value.address_id
                                                },
                                                scope:this
                                            });
                                        }else {
                                            myMask.close();
                                            Ext.MessageBox.show({title: 'Ввод оплаты',
                                                                 msg: results.msg ,
                                                                 buttons: Ext.MessageBox.OK,
                                                                 icon: Ext.MessageBox.ERROR
                                                                });
                                            Ext.TaskManager.stop(task);
                                        }
                                    });
                                },
                                interval: 5000,
                                repeat:20
                            };
                            Ext.TaskManager.start(task);
                        }
                    }

                }).show();

            } else {
                Ext.MessageBox.show({title: 'Ввод оплаты',
                                     msg: results.msg ,
                                     buttons: Ext.MessageBox.OK,
                                     icon: Ext.MessageBox.ERROR
                                    });
            }
        } else {
            Ext.MessageBox.show({title: 'Ввод оплаты',
                                 msg: results.msg ,
                                 buttons: Ext.MessageBox.OK,
                                 icon: Ext.MessageBox.ERROR
                                });
        }
        });
    },

    onBtnIpayVisaClick: function(button, e, eOpts) {
        /*
        var msg = "<center>Уважаемые клиенты !!!</center> <br>Ведутся наладочные работы ПО  на ООО «IPay» <br>сервис временно закрыт для оплаты";
        Ext.MessageBox.show({title: 'Сервис интернет-платежей iPay.ua.',
                             msg: msg,
                             buttons: Ext.MessageBox.OK,
                             icon: Ext.MessageBox.INFO
                            });

        */
        var me = this;
        var TabFirstPage = me.getTabFirstPage();
        TabFirstPage.child('#tabKassa').tab.show();
        var tab = TabFirstPage.child('#tabKassa');
        //tab.setTitle("IPAY.UA VISA");
        TabFirstPage.setActiveTab('tabKassa');


    },

    onWinIpayClose: function(panel, eOpts) {
        //in use
        var me = this;
        // STORE
        var StUser = Ext.data.StoreManager.get("StUser");

        //TAB_PANEL

        var tabPnCenter = me.getTabFirstPage();
        //TabFirstPage.setActiveTab('tabNach');
        var pay_id  = Ext.PAY_ID;

        location.href = "https://is.yuzhny.com/ipay/index.php";
        if(pay_id.length){
            var myMask= Ext.Msg.show({
                title:'Оплата через сервис on-line платежей IPAY.UA ',
                msg: 'Подтверждение оплаты.Ожидайте...',
                buttons: Ext.Msg.CANCEL,
                wait: true,
                modal: true,
                icon: Ext.Msg.INFO
            });

            params = {
                pay_id:pay_id,
                what:"PaymentStatus"
            };
            QueryPayment.getResults(params,function(results){
                if (results.data[0].status === "5"){
                    myMask.close();
                    var address_id = results.data[0].address_id;
                    var raion_id = results.data[0].raion_id;


                    Ext.MessageBox.confirm({
                        title: 'Оплата через сервис on-line платежей IPAY.UA ',
                        msg: '<b>Южненская Коммунальная Информационная Система</b><br>Платеж через сервис IPAY.UA обрабртан</center>',
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.INFO,
                        buttonText:{
                            ok: "Закрыть!"
                        }
                    });
                }else{
                    myMask.close();
                    Ext.MessageBox.show({title: 'Оплата через сервис on-line платежей IPAY.UA ',
                                         msg: '<b>Южненская Коммунальная Информационная Система</b><br>Платеж через сервис IPAY.UA еще не обработан<br> ',
                                         buttons: Ext.MessageBox.OK,
                                         icon: Ext.MessageBox.INFO,
                                         buttonText:{
                                             ok: "Закрыть!"
                                         }
                                        });
                }
            });
        }

    },

    onBtnMarfinBankClick: function(button, e, eOpts) {
        var me = this;
        var TabFirstPage = me.getTabFirstPage();
        TabFirstPage.child('#tabMarfinBank').tab.show();
        var tab = TabFirstPage.child('#tabMarfinBank');
        tab.setTitle("МарфинБанк");
        TabFirstPage.setActiveTab('tabMarfinBank');
    },

    onCheckOplataClick: function(button, e, eOpts) {
        //in use
        //STORE
        var me = this;
        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');

        //LOGIKA
        //FORM
        var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');
        var fmParamsPay = Ext.getCmp('fmParamsPay');

        //STORE
        //var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");//QueryKassa.getResults
        var StPayment = Ext.data.StoreManager.get("StPayment");//QueryKassa.getResults
        //var stVodomerKassa = Ext.data.StoreManager.get("StVodomerKassa");//QueryVodomer.getResults  <AppVodomer>


        //fmTekNachKassa.getForm().reset();

        stTekNachKassa.load({
            params: {
                login:login,
                what_id:address_id,
                address_id: address_id,
                raion_id:raion_id,
                what:'TekNachAllApp'
            },
            callback: function(records,operation,success){

                if (success)  {
                    if (records.length) {
                        fmParamsPay.getForm().reset();
                        fmTekNachKassa.getForm().reset();
                        fmTekNachKassa.getForm().loadRecord(records[0]);
                        var dolg1 = fmTekNachKassa.getForm().findField('dolg1').getValue();
                        var dolg2 = fmTekNachKassa.getForm().findField('dolg2').getValue();
                        var dolg3 = fmTekNachKassa.getForm().findField('dolg3').getValue();
                        var dolg4 = fmTekNachKassa.getForm().findField('dolg4').getValue();
                        var dolg5 = fmTekNachKassa.getForm().findField('dolg5').getValue();
                        var dolg6 = fmTekNachKassa.getForm().findField('dolg6').getValue();
                        var dolg7 = fmTekNachKassa.getForm().findField('dolg7').getValue();

                        var dolg = fmTekNachKassa.getForm().findField('dolg').getValue();


                        if (dolg1<=0){
                            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(true);
                        }
                        if (dolg2<=0){
                            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(true);
                        }
                        if (dolg3<=0){
                            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(true);
                        }
                        if (dolg4<=0){
                            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(true);
                        }
                        if (dolg5<=0){
                            fmTekNachKassa.getForm().findField('cbNext5').setDisabled(true);
                        }
                        if (dolg6<=0){
                            fmTekNachKassa.getForm().findField('cbNext6').setDisabled(true);
                        }
                        if (dolg7<=0){
                            fmTekNachKassa.getForm().findField('cbNext7').setDisabled(true);
                        }
                        if (dolg<=0){
                            fmTekNachKassa.getForm().findField('cbNext').setDisabled(true);
                        }

                    }
                }

            },
            scope:this
        });


        StPayment.load({
            params: {
                what:'MarfinPayment',
                what_id: address_id,
                address_id: address_id,
                login:login
            },
            scope:this
        });

    },

    onInsTekPokKassaClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stTekOplata = Ext.data.StoreManager.get("StTekOplata");//QueryKassa.getResults
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            user_id:values.get('user_id')
        };
        //var url1 = "http://localhost/ipay/test.php";
        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');
        var value = fmTekNachKassa.getValues();
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryPayment.newOplata(value,function(results){
            if (results.success === "1"){
                if (results.status === "1"){
                    var ins_id = results.ins_id;
                    Ext.PAY_ID = results.ins_id;
                    var url = results.url;
                    window.open(url,'_blank');

                } else {
                    Ext.MessageBox.show({title: 'Ввод оплаты',
                                         msg: results.msg ,
                                         buttons: Ext.MessageBox.OK,
                                         icon: Ext.MessageBox.ERROR
                                        });
                }
            } else {
                Ext.MessageBox.show({title: 'Ввод оплаты',
                                     msg: results.msg ,
                                     buttons: Ext.MessageBox.OK,
                                     icon: Ext.MessageBox.ERROR
                                    });
            }
        });
    },

    onTabNachActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        var house_id = values.get('house_id');

        //console.log(address_id);

        var fmTekNachKassa1 = Ext.getCmp('fmTekNachKassa1');
        var fmTekNachKassa2 = Ext.getCmp('fmTekNachKassa2');
        var fmTekNachKassa3 = Ext.getCmp('fmTekNachKassa3');
        var fmInfoApp = Ext.getCmp('fmInfoApp');
        fmInfoApp.getForm().reset();
        var stAppartment = Ext.data.StoreManager.get("StAppartment");
        var stLgotnik = Ext.data.StoreManager.get("StLgotnik");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stTekOplata = Ext.data.StoreManager.get("StTekOplata");
        var stVodomerKassa = Ext.data.StoreManager.get("StVodomerKassa");
        var stWater = Ext.data.StoreManager.get("StWater");
        stWater.removeAll();

        stAppartment.load({
            params: {
                what_id:address_id,
                address_id: address_id,
                what:'Appartment',
                login:login
            },
            callback: function(records,operation,success){
                if (records.length) {
                    fmInfoApp.getForm().loadRecord(records[0]);
                    var adrec = fmInfoApp.getForm().findField('address').getValue();
                    var fio = fmInfoApp.getForm().findField('nanim').getValue();
                    var kod = fmInfoApp.getForm().findField('address_id').getValue();
                    fmInfoApp.setTitle('ид&nbsp;&nbsp'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +
                                       adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +  fio);
                }
            },
            scope:this
        });

        stLgotnik.removeAll();
        stLgotnik.load({
            params: {
                what_id:address_id,
                address_id: address_id,
                what:'Lgotnik',
                login:login
            },
            scope:this
        });

        stTekOplata.load({
            params: {
                what:'AppTekOplata',
                what_id: address_id,
                address_id: address_id,
                login:login
            },
            scope:this
        });

        stVodomerKassa.load({
            params: {
                what:'AppVodomerKassa',
                what_id: address_id,
                address_id: address_id,
                login:login
            },
            scope:this
        });


        fmTekNachKassa1.getForm().reset();
        stTekNachKassa.removeAll();
        stTekNachKassa.load({
            params: {
                login:login,
                what_id:address_id,
                address_id: address_id,
                house_id: house_id,
                raion_id:raion_id,
                what:'TekNachAllApp'
            },
            callback: function(records1,operation,success){

                if (success)  {

                    if (records1.length) {
                        fmTekNachKassa1.getForm().loadRecord(records1[0]);
                    }
                }

            },
            scope:this
        });

        fmTekNachKassa2.getForm().reset();
        stTekNachKassa.removeAll();
        stTekNachKassa.load({
            params: {
                login:login,
                what_id:address_id,
                house_id: house_id,
                address_id: address_id,
                raion_id:raion_id,
                what:'TekNachAllApp1'
            },
            callback: function(records2,operation,success){

                if (success)  {

                    if (records2.length) {
                        fmTekNachKassa2.getForm().loadRecord(records2[0]);
                    }
                }

            },
            scope:this
        });
        fmTekNachKassa3.getForm().reset();
        stTekNachKassa.removeAll();
        stTekNachKassa.load({
            params: {
                login:login,
                what_id:address_id,
                address_id: address_id,
                house_id: house_id,
                raion_id:raion_id,
                what:'TekNachAllApp2'
            },
            callback: function(records3,operation,success){

                if (success)  {

                    if (records3.length) {
                        fmTekNachKassa3.getForm().loadRecord(records3[0]);
                    }
                }

            },
            scope:this
        });
    },

    onTabInfoAppActivate: function(component, eOpts) {
        var me = this;

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var house_id = values.get('house_id');

        var address = values.get('address');
        var TabFirstPage = me.getTabFirstPage();
        var activeTab = TabFirstPage.getActiveTab();
        var nameactiveTab = activeTab.getXType();

        if (house_id  === 22) {
            var url ='https://is.yuzhny.com/info/osbb_is.php?adrec='+address_id;
            //var url ='http://localhost/info/osbb_is.php?adrec='+address_id;

        } else {
            var url ='https://is.yuzhny.com/info/osmd_is.php?adrec='+address_id;
            //var url ='http://localhost/info/osmd_is.php?adrec='+address_id;

        }

        window.open(url,'_blank');


    },

    onTabAppBtiActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        var house_id = values.get('house_id');
        var fmAppartment = Ext.getCmp('fmAppartment');
        var stAppartment = Ext.data.StoreManager.get("StAppartment");
        var stHAppartment = Ext.data.StoreManager.get("StHAppartment");
        var stFamaly = Ext.data.StoreManager.get("StFamaly");
        stAppartment.load({
            params: {
                what_id:address_id,
                address_id: address_id,
                what:'Appartment',
                login:login,
                password:password
            },
            callback: function(records,operation,success){
                if(success){
                    stFamaly.removeAll();
                    stFamaly.load({
                        params: {
                            what_id:address_id,
                            address_id: address_id,
                            what:'Famaly',
                            login:login,
                            password:password
                        },
                        scope:this
                    });
                    stHAppartment.load({
                        params: {
                            what_id:address_id,
                            address_id: address_id,
                            what:'HistoryAppartment',
                            login:login,
                            password:password
                        },
                        scope:this
                    });
                    if (records.length) {
                        fmAppartment.getForm().loadRecord(records[0]);

                    }
                }
            },
            scope:this
        });
    },

    resetFmMarfin: function() {
        var form = Ext.getCmp('fmTekNachMarfin');
        form.getForm().findField('cbNext').setValue(false);
        form.getForm().findField('cbNext1').setValue(false);
        form.getForm().findField('cbNext2').setValue(false);
        form.getForm().findField('cbNext3').setValue(false);
        form.getForm().findField('cbNext4').setValue(false);
        form.getForm().findField('cbNext5').setValue(false);
        form.getForm().findField('cbNext7').setValue(false);

        form.getForm().findField('cbNext').setDisabled(false);
        form.getForm().findField('cbNext1').setDisabled(false);
        form.getForm().findField('cbNext2').setDisabled(false);
        form.getForm().findField('cbNext3').setDisabled(false);
        form.getForm().findField('cbNext4').setDisabled(false);
        form.getForm().findField('cbNext5').setDisabled(false);
        form.getForm().findField('cbNext7').setDisabled(false);

        form.getForm().findField('dolg').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg1').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg2').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg3').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg4').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg5').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg6').setFieldStyle('background-color: #fff; background-image: none;');
        form.getForm().findField('dolg7').setFieldStyle('background-color: #fff; background-image: none;');

        //form.down('#DoAllReset').setDisabled(true);
        //form.down('#account').setDisabled(true);

        //var newOplata = form.getForm().findField('newOplata').setValue(0);

    },

    InsTekPokVodomera: function() {
        var me = this;
        //console.log(me);
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");//QueryVodomer.getResults <TekPokVodomera>
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            user_id:values.get('user_id'),
            login:values.get('login'),
            address_id:values.get('address_id'),
            raion_id:values.get('raion_id'),
            what:'AVodomer'

        };
        //console.log(values);
        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');
        var fmInfoApp = Ext.getCmp('fmInfoApp1');
        var value = fmInfoApp.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        var newValue = value.newValue;
        var max =newValue - value.tek;
        if (max<=0){
            Ext.MessageBox.show({
                title: 'Проверка вводимых данных',
                msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',
                buttons: Ext.MessageBox.CANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:
                {
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmInfoApp.getForm().findField('newValue').focus();
                        return false;
                    }
                }
            });
        } else if(max > 20) {
            Ext.MessageBox.confirm({
                title: 'Проверка вводимых данных',
                msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',
                buttons: Ext.MessageBox.OKCANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    ok:'подтвеждаю',
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmInfoApp.getForm().findField('newValue').focus();
                        return false;
                    }else{
                        QueryVodomer.newPokVodomera(value,function(results){
                            if (results.success === "1"){

                                stTekNachKassa.load({
                                    params: {
                                        login:value.login,
                                        what_id: value.address_id,
                                        address_id: value.address_id,
                                        raion_id: value.raion_id,
                                        what:'TekNachAllApp'
                                    },
                                    callback: function(rec,operation,succ){
                                        if(succ){
                                            fmTekNachKassa.getForm().loadRecord(rec[0]);
                                        }
                                    },
                                    scope:this
                                });

                                stTekPokVodomera.load({
                                    params: {
                                        what:'TekPokVodomera',
                                        what_id: value.address_id,
                                        address_id: value.address_id,
                                        vodomer_id: value.vodomer_id,
                                        login:value.login
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                            fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                            fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                            fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                            fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                            fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                            fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                                            fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                        }
                                    },
                                    scope:this
                                });
                                Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                                    msg: results.msg,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.INFO
                                });
                                fmInfoApp.getForm().findField('newValue').setValue(0).focus();


                            }else{
                                Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',
                                    msg: results.msg,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR
                                });
                                fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                            }
                        });
                    }
                }
            });


        } else {
            QueryVodomer.newPokVodomera(value,function(results){
                if (results.success==='1'){
                    stTekNachKassa.load({
                        params: {
                            login:value.login,
                            password:value.password,
                            what_id: value.address_id,
                            address_id: value.address_id,
                            raion_id: value.raion_id,
                            what:'TekNachAllApp'
                        },
                        callback: function(rec,operation,succ){
                            if(succ){
                                //   console.log(rec);

                                fmTekNachKassa.getForm().loadRecord(rec[0]);
                            }
                        },
                        scope:this
                    });

                    stTekPokVodomera.load({
                        params: {
                            what:'TekPokVodomera',
                            what_id: value.address_id,
                            address_id: value.address_id,
                            vodomer_id: value.vodomer_id,
                            login:value.login,
                            password:value.password
                        },
                        callback: function(records,operation,success){
                            if(success){
                                //console.log(records);

                                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                            }
                        },
                        scope:this
                    });
                    Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                        msg: results.msg,
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.INFO
                    });
                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                }else{
                    Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                        msg: results.msg,
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.ERROR
                    });
                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                }
            });
        }

    },

    InsTekPokVodomera1: function() {
        var me = this;
        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            raion_id:values.get('raion_id'),
            what:'AVodomer'
        };
        var fmTekNachKassa = Ext.getCmp('fmTekNachKassa1');
        var fmInfoApp = Ext.getCmp('fmInfoApp');
        var value = fmInfoApp.getValues();
        Ext.Object.merge(value, params);
        var newValue = value.newValue;
        var max =newValue - value.tek;
        if (max<=0){
            Ext.MessageBox.show({
                title: 'Проверка вводимых данных',
                msg: 'Текущие показания <b>'+value.tek+
                '</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',
                buttons: Ext.MessageBox.CANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmInfoApp.getForm().findField('newValue').focus();
                        return false;
                    }
                }
            });
        } else if(max > 20) {
            Ext.MessageBox.confirm({
                title: 'Проверка вводимых данных',
                msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +
                '</b> куб(a)<br>Подтвердите или отмените вводимые показания.',
                buttons: Ext.MessageBox.OKCANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    ok:'подтвеждаю',
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmInfoApp.getForm().findField('newValue').focus();
                        return false;
                    }else{
                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();
                        QueryVodomer.newPokVodomera(value,function(results){
                            if (results.success === "1"){
                                stTekNachKassa.load({
                                    params: {
                                        login:value.login,
                                        password:value.password,
                                        what_id: value.address_id,
                                        address_id: value.address_id,
                                        raion_id: value.raion_id,
                                        what:'TekNachAllApp'
                                    },
                                    callback: function(rec,operation,succ){
                                        if(succ){
                                            fmTekNachKassa.getForm().loadRecord(rec[0]);
                                        }
                                    },
                                    scope:this
                                });

                                stTekPokVodomera.load({
                                    params: {
                                        what:'TekPokVodomera',
                                        what_id: value.address_id,
                                        address_id: value.address_id,
                                        vodomer_id: value.vodomer_id,
                                        login:value.login,
                                        password:value.password
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                            fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                            fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                            fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                            fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                            fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                            fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                                            fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                        }
                                    },
                                    scope:this
                                });
                                Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                                                     msg: results.msg,
                                                     buttons: Ext.MessageBox.OK,
                                                     icon: Ext.MessageBox.INFO
                                                    });
                                fmInfoApp.getForm().findField('newValue').setValue(0).focus();


                            }else{
                                Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                                                     msg: results.msg,
                                                     buttons: Ext.MessageBox.OK,
                                                     icon: Ext.MessageBox.ERROR
                                                    });
                                fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                            }
                        });
                    }
                }
            });


        } else {
            fmInfoApp.getForm().findField('newValue').setValue(0);
            QueryVodomer.newPokVodomera(value,function(results){
                if (results.success==='1'){
                    stTekNachKassa.load({
                        params: {
                            login:value.login,
                            password:value.password,
                            what_id: value.address_id,
                            address_id: value.address_id,
                            raion_id: value.raion_id,
                            what:'TekNachAllApp'
                        },
                        callback: function(rec,operation,succ){
                            if(succ){

                                fmTekNachKassa.getForm().loadRecord(rec[0]);
                            }
                        },
                        scope:this
                    });

                    stTekPokVodomera.load({
                        params: {
                            what:'TekPokVodomera',
                            what_id: value.address_id,
                            address_id: value.address_id,
                            vodomer_id: value.vodomer_id,
                            login:value.login,
                            password:value.password
                        },
                        callback: function(records,operation,success){
                            if(success){
                                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                            }
                        },
                        scope:this
                    });
                    Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                                         msg: results.msg,
                                         buttons: Ext.MessageBox.OK,
                                         icon: Ext.MessageBox.INFO
                                        });
                    fmInfoApp.getForm().findField('newValue').setValue(0);

                }else{
                    Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',
                                         msg: results.msg,
                                         buttons: Ext.MessageBox.OK,
                                         icon: Ext.MessageBox.ERROR
                                        });
                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                }
            });
        }

    },

    InsTekPokVodomera2: function() {
        // in use
        var me = this;
        //console.log(me);
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachKassa = Ext.data.StoreManager.get("StTekNachKassa");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");//QueryVodomer.getResults <TekPokVodomera>
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            user_id:values.get('user_id'),
            login:values.get('login'),
            address_id:values.get('address_id'),
            raion_id:values.get('raion_id'),
            what:'AVodomer'

        };
        //console.log(values);
        //FORMA
        var fmTekNachKassa = Ext.getCmp('fmTekNachMarfin');
        var fmInfoApp = Ext.getCmp('fmInfoApp2');
        var value = fmInfoApp.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        var newValue = value.newValue;
        var max =newValue - value.tek;
        if (max<=0){
            Ext.MessageBox.show({
                title: 'Проверка вводимых данных',
                msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',
                buttons: Ext.MessageBox.CANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:
                {
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmInfoApp.getForm().findField('newValue').focus();
                        return false;
                    }
                }
            });
        } else if(max > 20) {
            Ext.MessageBox.confirm({
                title: 'Проверка вводимых данных',
                msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',
                buttons: Ext.MessageBox.OKCANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    ok:'подтвеждаю',
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmInfoApp.getForm().findField('newValue').focus();
                        return false;
                    }else{
                        QueryVodomer.newPokVodomera(value,function(results){
                            if (results.success === "1"){

                                stTekNachKassa.load({
                                    params: {
                                        login:value.login,
                                        what_id: value.address_id,
                                        address_id: value.address_id,
                                        raion_id: value.raion_id,
                                        what:'TekNachAllApp'
                                    },
                                    callback: function(rec,operation,succ){
                                        if(succ){
                                            // me.resetFmKassa();
                                            fmTekNachKassa.getForm().loadRecord(rec[0]);
                                        }
                                    },
                                    scope:this
                                });

                                stTekPokVodomera.load({
                                    params: {
                                        what:'TekPokVodomera',
                                        what_id: value.address_id,
                                        address_id: value.address_id,
                                        vodomer_id: value.vodomer_id,
                                        login:value.login
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                            fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                            fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                            fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                            fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                            fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                            fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                                            fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                        }
                                    },
                                    scope:this
                                });
                                Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                                    msg: results.msg,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.INFO
                                });
                                me.resetFmKassa();
                                fmInfoApp.getForm().findField('newValue').setValue(0).focus();


                            }else{
                                Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',
                                    msg: results.msg,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR
                                });
                                fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                            }
                        });
                    }
                }
            });


        } else {
            QueryVodomer.newPokVodomera(value,function(results){
                if (results.success==='1'){
                    stTekNachKassa.load({
                        params: {
                            login:value.login,
                            password:value.password,
                            what_id: value.address_id,
                            address_id: value.address_id,
                            raion_id: value.raion_id,
                            what:'TekNachAllApp'
                        },
                        callback: function(rec,operation,succ){
                            if(succ){
                                //   console.log(rec);

                                fmTekNachKassa.getForm().loadRecord(rec[0]);
                            }
                        },
                        scope:this
                    });

                    stTekPokVodomera.load({
                        params: {
                            what:'TekPokVodomera',
                            what_id: value.address_id,
                            address_id: value.address_id,
                            vodomer_id: value.vodomer_id,
                            login:value.login,
                            password:value.password
                        },
                        callback: function(records,operation,success){
                            if(success){
                                //console.log(records);

                                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));
                                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));
                                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));
                                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));
                                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));
                                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));
                                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));
                                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));
                            }
                        },
                        scope:this
                    });
                    Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                        msg: results.msg,
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.INFO
                    });
                    me.resetFmKassa();
                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                }else{
                    Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',
                        msg: results.msg,
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.ERROR
                    });
                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();

                }
            });
        }

    }

});
