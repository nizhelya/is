/*
 * File: app/controller/CrAppNach.js
 * Date: Sun Aug 02 2020 21:34:04 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('yis.controller.CrAppNach', {
    extend: 'Ext.app.Controller',
    alias: 'controller.cAppNach',

    control: {
        "#tabVoda": {
            activate: 'onTabVodaActivate'
        },
        "#tabPodogrev": {
            activate: 'onTabPodogrevActivate'
        },
        "#tabTbo": {
            activate: 'onTabTboActivate'
        },
        "#tabKvartplata": {
            activate: 'onTabKvartplataActivate'
        },
        "#tabFmAppVoda": {
            activate: 'onTabFmAppVodaActivate'
        },
        "#tabFmAppStoki": {
            activate: 'onTabFmAppStokiActivate'
        },
        "#tabFmAppPodogrev": {
            activate: 'onTabFmAppPodogrevActivate'
        },
        "#tabFmAppOtoplenie": {
            activate: 'onTabFmAppOtoplActivate'
        },
        "#tabFmAppTbo": {
            activate: 'onTabFmAppTboActivate'
        },
        "#tabFmAppKvartplata": {
            activate: 'onTabFmAppKvartplataActivate'
        },
        "#grNachVoda": {
            selectionchange: 'onGrNachVodaSelectionChange'
        },
        "#grNachStoki": {
            selectionchange: 'onGrNachStokiSelectionChange'
        },
        "#grNachPodogrev": {
            selectionchange: 'onGrNachPodogrevSelectionChange'
        },
        "#grNachOtoplenie": {
            selectionchange: 'onGrNachOtoplenieSelectionChange'
        },
        "#grNachKvartplata": {
            selectionchange: 'onGrNachKvartplataSelectionChange'
        },
        "#grNachTbo": {
            selectionchange: 'onGrNachTboSelectionChange'
        },
        "#grLgotaNachVoda": {
            selectionchange: 'onGrLgotaNachVodaSelectionChange'
        },
        "#grLgotaNachStoki": {
            selectionchange: 'onGrLgotaNachStokiSelectionChange'
        },
        "#grLgotaNachPodogrev": {
            selectionchange: 'onGrLgotaNachPodogrevSelectionChange'
        },
        "#grLgotaNachOtoplenie": {
            selectionchange: 'onGrLgotaNachOtoplenieSelectionChange'
        },
        "#grLgotaNachTbo": {
            selectionchange: 'onGrLgotaNachTboSelectionChange'
        },
        "#grLgotaNachKvartplata": {
            selectionchange: 'onGrLgotaNachKvartplataSelectionChange'
        },
        "#grTarifHousesKv": {
            selectionchange: 'onGrTarifHousesKvSelectionChange'
        },
        "#grTarifHousesTbo": {
            selectionchange: 'onGrTarifHousesTboSelectionChange'
        },
        "#grTarifHousesVoda": {
            selectionchange: 'onGrTarifHousesVodaSelectionChange'
        },
        "#grTarifHousesPodogrev": {
            selectionchange: 'onGrTarifHousesPodogrevSelectionChange'
        },
        "#grNachPtn": {
            selectionchange: 'onGrNachPtnSelectionChange'
        },
        "#btControlLgot": {
            click: 'onBtControlLgotClick'
        },
        "#btControlDbfLgot": {
            click: 'onBtControlDbfLgotClick'
        },
        "#tabNachApp": {
            activate: 'onTabNachAppActivate'
        },
        "#tabFmAppPtn": {
            activate: 'onTabFmAppPtnActivate'
        },
        "#tabAppTbo": {
            activate: 'onTabAppTboActivate'
        },
        "#tabAppVoda": {
            activate: 'onTabAppVodaActivate'
        },
        "#tabAppStoki": {
            activate: 'onTabAppStokiActivate'
        },
        "#tabAppPtn": {
            activate: 'onTabAppPtnActivate'
        },
        "#tabAppPodogrev": {
            activate: 'onTabAppPodogrevActivate'
        },
        "#tabAppOtoplenie": {
            activate: 'onTabAppOtoplenieActivate'
        },
        "#tabAppKvartplata": {
            activate: 'onTabAppKvartplataActivate'
        },
        "#tabAppMgkc": {
            activate: 'onTabAppMgkcActivate'
        }
    },

    onTabVodaActivate: function(component, eOpts) {
        //STORE
        var form = Ext.getCmp('fmVoda');
        var btAddNach = Ext.getCmp('btAddNachVoda');
        var btAddPerer = Ext.getCmp('btAddPererVoda');
        var pnPerer = Ext.getCmp('pnPererVoda');
        var grid = Ext.getCmp('grTarifHousesVoda');
        var store = grid.getStore();
        store.removeAll();
        var dt = new Date();
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        form.getForm().reset();
        form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
        btAddNach.setText("Начислить воду и стоки за период  "+ Ext.Date.format(firstDay, 'F,Y'));
        btAddPerer.setText("Перерасчитать воду и стоки  в  "+ Ext.Date.format(firstDay, 'F,Y'));
        pnPerer.setTitle("Перерасчет воды и стоков за период ");
    },

    onTabPodogrevActivate: function(component, eOpts) {
        //STORE
        var form = Ext.getCmp('fmPodogrev');
        var btAddNach = Ext.getCmp('btAddNachPodogrev');
        var btAddPerer = Ext.getCmp('btAddPererPodogrev');
        var pnPerer = Ext.getCmp('pnPererPodogrev');
        var grid = Ext.getCmp('grTarifHousesPodogrev');
        var store = grid.getStore();
        store.removeAll();
        var dt = new Date();
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        form.getForm().reset();
        form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
        btAddNach.setText("Начислить подогрев за период  "+ Ext.Date.format(firstDay, 'F,Y'));
        btAddPerer.setText("Перерасчитать подогрев  за  "+ Ext.Date.format(firstDay, 'F,Y'));
        pnPerer.setTitle("Перерасчет подогрев за период "+ Ext.Date.format(firstDay, 'F,Y'));
    },

    onTabTboActivate: function(component, eOpts) {
        //STORE
        var form = Ext.getCmp('fmTbo');
        var btAddNach = Ext.getCmp('btAddNachTbo');
        var btAddPerer = Ext.getCmp('btAddPererTbo');
        var pnPerer = Ext.getCmp('pnPererTbo');
        var grid = Ext.getCmp('grTarifHousesTbo');
        var store = grid.getStore();
        store.removeAll();
        var dt = new Date();
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        form.getForm().reset();
        form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
        btAddNach.setText("Начислить ТБО за период   "+ Ext.Date.format(firstDay, 'F,Y'));
        btAddPerer.setText("Перерасчитать ТБО за период  "+ Ext.Date.format(firstDay, 'F,Y'));
        pnPerer.setTitle("Перерасчет ТБО за период "+ Ext.Date.format(firstDay, 'F,Y'));

    },

    onTabKvartplataActivate: function(component, eOpts) {
        //STORE
        var form = Ext.getCmp('fmKvartplata');
        var btAddNach = Ext.getCmp('btAddNachKv');
        var btAddPerer = Ext.getCmp('btAddPererKv');
        var pnPerer = Ext.getCmp('pnPererKv');
        var grid = Ext.getCmp('grTarifHousesKv');
        var store = grid.getStore();
        store.removeAll();


        var dt = new Date();
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        form.getForm().reset();
        form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
        btAddNach.setText("Начислить квартплату за период  "+ Ext.Date.format(firstDay, 'F,Y'));
        btAddPerer.setText("Перерасчитать квартплату за  "+ Ext.Date.format(firstDay, 'F,Y'));
    },

    onTabFmAppVodaActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachVoda');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');

        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'VodaApp',
                what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
        StLgotaNach.load({
            params: {
                what:'LgotaNachVoda',
                  what_id:address_id,
                address_id: address_id,
                login:login
            }
        });
    },

    onTabFmAppStokiActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachStoki');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'StokiApp',
                what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
        StLgotaNach.load({
            params: {
                what:'LgotaNachStoki',
                 what_id:address_id,
                address_id: address_id,
                login:login
            }
        });
    },

    onTabFmAppPodogrevActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachPodogrev');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'PodogrevApp',
                what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
        StLgotaNach.load({
            params: {
                what:'LgotaNachPodogrev',
                  what_id:address_id,
                address_id: address_id,
                login:login
            }
        });
    },

    onTabFmAppOtoplActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachOtoplenie');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'OtoplenieApp',
                 what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });

        StLgotaNach.load({
            params: {
                what:'LgotaNachOtoplenie',
                what_id:address_id,
                address_id: address_id,
                login:login
            }
        });

    },

    onTabFmAppTboActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachTbo');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'TboApp',
                 what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
        StLgotaNach.load({
            params: {
                what:'LgotaNachTbo',
                 what_id:address_id,
                address_id: address_id,
                login:login
            }
        });
    },

    onTabFmAppKvartplataActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachKvartplata');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'KvartplataApp',
                 what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
        StLgotaNach.load({
            params: {
                what:'LgotaNachKvartplata',
               what_id:address_id,
                address_id: address_id,
                login:login
            }
        });
    },

    onGrNachVodaSelectionChange: function(model, selected, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppVoda');
        //console.log(selected[0].data.data);

        //var record = selected[0].data;
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            StLgotaNachVoda.load({
                params: {
                    what:'LgotaNachVodaData',
                    address_id: values.get('address_id'),
                    data:selected[0].data.data,
                    login:values.get('login')
                },
                scope:this
            });
        }
    },

    onGrNachStokiSelectionChange: function(model, selected, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppStoki');
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            StLgotaNachVoda.load({
                params: {
                    what:'LgotaNachStokiData',
                    address_id: values.get('address_id'),
                    data:selected[0].data.data,
                    login:values.get('login')
                },
                scope:this
            });
        }
    },

    onGrNachPodogrevSelectionChange: function(model, selected, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppPodogrev');
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            StLgotaNachVoda.load({
                params: {
                    what:'LgotaNachPodogrevData',
                    address_id: values.get('address_id'),
                    data:selected[0].data.data,
                    login:values.get('login')
                },
                scope:this
            });
        }
    },

    onGrNachOtoplenieSelectionChange: function(model, selected, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppOtoplenie');
        //console.log(selected[0]);
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            StLgotaNachVoda.load({
                params: {
                    what:'LgotaNachOtoplenieData',
                    address_id: values.get('address_id'),
                    data:selected[0].data.data,
                    login:values.get('login')
                },
                scope:this
            });
        }
    },

    onGrNachKvartplataSelectionChange: function(model, selected, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppKvartplata');
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            StLgotaNachVoda.load({
                params: {
                    what:'LgotaNachKvartplataData',
                    address_id: values.get('address_id'),
                    data:selected[0].data.data,
                    login:values.get('login')
                },
                scope:this
            });
        }
    },

    onGrNachTboSelectionChange: function(model, selected, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppTbo');
        if (selected.length > 0) {
            form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            StLgotaNachVoda.load({
                params: {
                    what:'LgotaNachTboData',
                    address_id: values.get('address_id'),
                    data:selected[0].data.data,
                    login:values.get('login')
                },
                scope:this
            });
        }
    },

    onGrLgotaNachVodaSelectionChange: function(model, selected, eOpts) {
        var form = Ext.getCmp('tabFmAppVoda');
        if (selected.length > 0) {
            form.getForm().findField('msq_lgota').setValue(selected[0].data.info);

        }

    },

    onGrLgotaNachStokiSelectionChange: function(model, selected, eOpts) {
        var form = Ext.getCmp('tabFmAppStoki');
        if (selected.length > 0) {
            form.getForm().findField('msq_lgota').setValue(selected[0].data.info);

        }
    },

    onGrLgotaNachPodogrevSelectionChange: function(model, selected, eOpts) {
        var form = Ext.getCmp('tabFmAppPodogrev');
        if (selected.length > 0) {
            form.getForm().findField('msq_lgota').setValue(selected[0].data.info);

        }
    },

    onGrLgotaNachOtoplenieSelectionChange: function(model, selected, eOpts) {
        var form = Ext.getCmp('tabFmAppOtoplenie');
        if (selected.length > 0) {
            form.getForm().findField('msq_lgota').setValue(selected[0].data.info);

        }
    },

    onGrLgotaNachTboSelectionChange: function(model, selected, eOpts) {
        var form = Ext.getCmp('tabFmAppTbo');
        if (selected.length > 0) {
            form.getForm().findField('msq_lgota').setValue(selected[0].data.info);

        }
    },

    onGrLgotaNachKvartplataSelectionChange: function(model, selected, eOpts) {
        var form = Ext.getCmp('tabFmAppKvartplata');
        if (selected.length > 0) {
            form.getForm().findField('msq_lgota').setValue(selected[0].data.info);

        }
    },

    onGrTarifHousesKvSelectionChange: function(model, selected, eOpts) {
        //STORE

        var stAddress = Ext.data.StoreManager.get('StAddressOrg');
        var form = Ext.getCmp('fmKvartplata');
        var btAddPererKv = Ext.getCmp('btAddPererKv');
        var printRaspechatkaHouseAllMgkc = Ext.getCmp('printRaspechatkaHouseAllMgkc');
        var printRaspechatkaHouse = Ext.getCmp('printRaspechatkaHouseMgkc');

        var viborTarif = Ext.getCmp('cbTarifKvartplata');
        var btnNachHouse = Ext.getCmp('btnNachHouseKvartplata');
        var tarif = Ext.getCmp('tarKvartplata');




        var dt = new Date();
        var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        //console.log(selected);
        if (selected.length > 0) {
            //form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            form.getForm().findField('house_id').setValue(selected[0].data.house_id);
            form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));
            form.getForm().findField('allkv').show();
            form.getForm().findField('address_ot').clearValue();
            form.getForm().findField('address_do').clearValue();
            printRaspechatkaHouseAllMgkc.setDisabled(false);
            printRaspechatkaHouse.setDisabled(false);

            viborTarif.clearValue();
            viborTarif.setDisabled(false);
            btnNachHouse.setDisabled(false);
            tarif.setValue(0);

            stAddress.removeAll();
            stAddress.load({
                params: {
                    what:'AddressFromHousesTarif',
                    what_id: selected[0].data.house_id
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().findField('address_ot').setValue(records[0].get('address_id'));
                        form.getForm().findField('address_do').setValue(records[0].get('address_id'));
                    }

                },
                scope:this
            });

        }
    },

    onGrTarifHousesTboSelectionChange: function(model, selected, eOpts) {
        //STORE

        var stAddress = Ext.data.StoreManager.get('StAddressOrg');
        var form = Ext.getCmp('fmTbo');
        var btAddPerer = Ext.getCmp('btAddPererTbo');
        var viborTarif = Ext.getCmp('cbTarifTbo');
        var btnNachHouse = Ext.getCmp('btnNachHouseTbo');
        var tarif = Ext.getCmp('tarTbo');

        var dt = new Date();
        var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        //console.log(selected);
        if (selected.length > 0) {
            //form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            form.getForm().findField('house_id').setValue(selected[0].data.house_id);
            form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));
            form.getForm().findField('address_ot').clearValue();
            form.getForm().findField('address_do').clearValue();
             viborTarif.clearValue();
            viborTarif.setDisabled(false);
            btnNachHouse.setDisabled(false);
            tarif.setValue(0);

            stAddress.removeAll();
            stAddress.load({
                params: {
                    what:'AddressFromHousesTarif',
                    what_id: selected[0].data.house_id
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().findField('address_ot').setValue(records[0].get('address_id'));
                        form.getForm().findField('address_do').setValue(records[0].get('address_id'));
                    }

                },
                scope:this
            });

        }
    },

    onGrTarifHousesVodaSelectionChange: function(model, selected, eOpts) {
        //STORE

        var stAddress = Ext.data.StoreManager.get('StAddressOrg');
        var form = Ext.getCmp('fmVoda');
        var pnPerer = Ext.getCmp('pnPererVoda');
        var btAddPerer = Ext.getCmp('btAddPererVoda');
        var viborTarif = Ext.getCmp('cbTarifVoda');
        var btnNachHouse = Ext.getCmp('btnNachHouseVoda');
        var tarif = Ext.getCmp('tarVoda');

        var dt = new Date();
        var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        //console.log(selected);
        if (selected.length > 0) {
            //form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            form.getForm().findField('house_id').setValue(selected[0].data.house_id);
            form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));
            form.getForm().findField('address_ot').clearValue();
            form.getForm().findField('address_do').clearValue();
            viborTarif.clearValue();
            viborTarif.setDisabled(false);
            btnNachHouse.setDisabled(false);
            tarif.setValue(0);

            stAddress.removeAll();
            stAddress.load({
                params: {
                    what:'AddressFromHousesTarif',
                    what_id: selected[0].data.house_id
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().findField('address_ot').setValue(records[0].get('address_id'));
                        form.getForm().findField('address_do').setValue(records[0].get('address_id'));
                    }

                },
                scope:this
            });

        }

    },

    onGrTarifHousesPodogrevSelectionChange: function(model, selected, eOpts) {
        //STORE

        var stAddress = Ext.data.StoreManager.get('StAddressOrg');
        var form = Ext.getCmp('fmPodogrev');
        var pnPerer = Ext.getCmp('pnPererPodogrev');
        var btAddPerer = Ext.getCmp('btAddPererPodogrev');
        var viborTarif = Ext.getCmp('cbTarifTeplo');
        var btnNachHouse = Ext.getCmp('btnNachHousePodogrev');
        var tarif = Ext.getCmp('tarTeplo');

        var dt = new Date();
        var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        //console.log(selected);
        if (selected.length > 0) {
            //form.getForm().reset();
            form.getForm().loadRecord(selected[0]);
            form.getForm().findField('house_id').setValue(selected[0].data.house_id);
            form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));
            form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));
            form.getForm().findField('address_ot').clearValue();
            form.getForm().findField('address_do').clearValue();
            viborTarif.clearValue();
            viborTarif.setDisabled(false);
            btnNachHouse.setDisabled(false);
            tarif.setValue(0);

            stAddress.removeAll();
            stAddress.load({
                params: {
                    what:'AddressFromHousesTarif',
                    what_id: selected[0].data.house_id
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().findField('address_ot').setValue(records[0].get('address_id'));
                        form.getForm().findField('address_do').setValue(records[0].get('address_id'));
                    }

                },
                scope:this
            });

        }
    },

    onGrNachPtnSelectionChange: function(model, selected, eOpts) {
         var stUser = Ext.data.StoreManager.get("StUser");
                var StLgotaNachVoda = Ext.data.StoreManager.get("StLgotaNachVoda");
                //LOGIN & PASSWORD
                var values =stUser.getAt(0);
                var form = Ext.getCmp('tabFmAppPtn');
                if (selected.length > 0) {
                    form.getForm().reset();
                    form.getForm().loadRecord(selected[0]);
                    StLgotaNachVoda.load({
                        params: {
                            what:'LgotaNachPtnData',
                            address_id: values.get('address_id'),
                            data:Ext.Date.format(selected[0].data.data,"Ymd"),
                            login:values.get('login'),
                            password:values.get('password')
                        },
                        scope:this
                    });
                }
    },

    onBtControlLgotClick: function(button, e, eOpts) {
        // in use
        var value = button.findParentByType('form').getValues();
        var tabPnCenter =  Ext.getCmp('tabPnCenter');
        var report = 'controlLgot';
        var namereport = 'Контроль льгот';
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var tab = tabPnCenter.child('#'+report);
        if (!tab) {
            tab  = tabPnCenter.add({
                xtype:'tabReportOrg',
                title:namereport,
                id:''+report+''
            });

        }
        var reppan = tab.getComponent(0);
        tabPnCenter.setActiveTab(tab);

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            what:"controlLgot",
            report:report
        };

        //LOGIKA
        Ext.Object.merge(value, params);

        var myMask = Ext.Msg.show({
            title:'Отчеты...',
            msg: 'Загрузка отчета.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });

        QueryReport.getResults(value,function(results){
            if (results.success==="1"){
                myMask.close();
                reppan.update(results.content);
                Ext.REPORTCONTENT =results.content;
                Ext.REPORTSQL =results.sql;
                Ext.REPORTTITLE =report;
            }else{
                myMask.close();
                Ext.MessageBox.show({title: namereport,
                    msg: results.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });
            }
        });


    },

    onBtControlDbfLgotClick: function(button, e, eOpts) {
        // in use

        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StDbfLgota = Ext.data.StoreManager.get("StDbfLgota");

        //COMPONENT
        var form = button.findParentByType('form');
        var value = form.getValues();

        var tabPnCenter =  Ext.getCmp('tabPnCenter');
        var tab = tabPnCenter.child('#tabDbfLgota');
        var usluga =form.getForm().findField('rbUsluga').inputValue;
        StDbfLgota.proxy.setExtraParam('what', usluga);

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            what:"ExportBudjetEmail"
        };
        //LOGIKA
        Ext.Object.merge(value, params);

        var myMask = Ext.Msg.show({
            title:'Загрузка ДБФ файла',
            msg: 'Загрузка ДБФ файла со списком льготников.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });


        QueryAddress.updateRecords(value,function(result){
            if(result.success==="1"){
                StDbfLgota.load({
                    params: {
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    callback: function(records,operation,success){
                        if(success){
                            if (!tab) {
                                tab  = tabPnCenter.add({
                                    xtype:'tabDbfLgota'
                                });

                            }
                            myMask.close();
                            tabPnCenter.setActiveTab(tab);

                        }else {
                            myMask.close();

                        }
                    },
                    scope:this
                });

            } else {
                myMask.close();

                Ext.MessageBox.show({
                    title: 'Загрузка ДБФ файла ',
                    msg: result.msg,
                    buttons: Ext.MessageBox.OK,

                    icon: Ext.MessageBox.ERROR
                });

            }
        });

    },

    onTabNachAppActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');
        var stAppartment = Ext.data.StoreManager.get("StAppartment");
        var tabPnNachApp = Ext.getCmp('tabNachApp');

        var tabFmAppBti = Ext.getCmp('tabFmAppBti');
        var values =stUser.getAt(0);
        tabPnNachApp.setActiveTab(0);

        if (values.get('address_id'))
            stAppartment.load({
                params: {
                    what_id:address_id,
                    address_id: address_id,
                    what:'Appartment',
                    login:login
                },
                callback: function(records,operation,success){
                    if(success){
                        if (records.length) {
                            tabFmAppBti.getForm().loadRecord(records[0]);

                            var adrec = tabFmAppBti.getForm().findField('address').getValue();
                            var fio = tabFmAppBti.getForm().findField('nanim').getValue();
                            var kod = tabFmAppBti.getForm().findField('address_id').getValue();
                            tabFmAppBti.setTitle('ид&nbsp;&nbsp'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +
                                                 adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +  fio);


                    var dogYtke = tabFmAppBti.getForm().findField('dog_ytke').getValue();
                    if(dogYtke!=="") {
                        tabFmAppBti.down('#btnOpenWinDogovorYtke').setText('Договір № '+dogYtke);
                    } else {
                        tabFmAppBti.down('#btnOpenWinDogovorYtke').setText('Договіра немає');
                    }
                            var dogVik = tabFmAppBti.getForm().findField('dog_vik').getValue();
                            var rdogVik = tabFmAppBti.getForm().findField('rdog_vik').getValue();
                            if(dogVik !=="") {
                                tabFmAppBti.down('#btnOpenWinDogovorVik').setText('Договір № '+dogVik);
                            }else {
                                tabFmAppBti.down('#btnOpenWinDogovorVik').setText('Договіра немає');
                            }
                            if(rdogVik !=="") {
                                tabFmAppBti.down('#btnOpenWinDogRestrVik').setText('Договір рестр № '+rdogVik);
                            }else {
                                tabFmAppBti.down('#btnOpenWinDogRestrVik').setText('Договіра рестр немає');
                            }
                        }

                    }
                },
                scope:this
            });
    },

    onTabFmAppPtnActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var StLgotaNach = Ext.data.StoreManager.get("StLgotaNachVoda");
        var gridNachisl = Ext.getCmp('grNachPtn');


        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var login = values.get('login');
        var address_id = values.get('address_id');
        var raion_id = values.get('raion_id');
        var address = values.get('address');

        // FORM
        var form = component;
        // DATA

        //LOGIKA
        StTekNach.load({
            params: {
                what:'PtnApp',
                what_id:address_id,
                address_id: address_id,
                login:login
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
        StLgotaNach.load({
            params: {
                what:'LgotaNachPtn',
                  what_id:address_id,
                address_id: address_id,
                login:login
            }
        });
    },

    onTabAppTboActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var stAppartment = Ext.data.StoreManager.get("StAppartment");
        var form = Ext.getCmp('tabFmAppTbo');
        var tabPnNachApp = Ext.getCmp('tabPnNachApp');
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachTbo');

        var values =stUser.getAt(0);
        if (values.get('address_id'))

                StTekNach.load({
                    params: {
                        what:'TboApp',
                        address_id: values.get('address_id'),
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    callback: function(records,operation,success){
                        if(success){
                            form.getForm().reset();
                            gridNachisl.getView().getSelectionModel().select(0);

                        }else{
                            form.getForm().reset();
                        }
                    },
                    scope:this
                });


    },

    onTabAppVodaActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachVoda');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppVoda');

        gridNachisl.getView().getSelectionModel().deselectAll();
        form.getForm().reset();
        StTekNach.load({
            params: {
                what:'VodaApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    gridNachisl.getView().refresh();
                    gridNachisl.getView().getSelectionModel().select(0);
                }else{
                    form.getForm().reset();
                }
            },
            scope:this        });


    },

    onTabAppStokiActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachStoki');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppStoki');

        gridNachisl.getView().getSelectionModel().deselectAll();
        form.getForm().reset();
        StTekNach.load({
            params: {
                what:'StokiApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    gridNachisl.getView().refresh();
                    gridNachisl.getView().getSelectionModel().select(0);
                }else{
                    form.getForm().reset();
                }
            },
            scope:this        });

    },

    onTabAppPtnActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachPtn');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppPtn');
        StTekNach.load({
            params: {
                what:'PtnApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    gridNachisl.getView().refresh();
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabAppPodogrevActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachPodogrev');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppPodogrev');
        StTekNach.load({
            params: {
                what:'PodogrevApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    gridNachisl.getView().refresh();
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabAppOtoplenieActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachOtoplenie');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppOtoplenie');
        StTekNach.load({
            params: {
                what:'OtoplenieApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });

    },

    onTabAppKvartplataActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachKvartplata');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppKvartplata');
        StTekNach.load({
            params: {
                what:'KvartplataApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    gridNachisl.getView().refresh();
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabAppMgkcActivate: function(component, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNachApp");
        var gridNachisl = Ext.getCmp('grNachMgkc');
        var values =stUser.getAt(0);
        var form = Ext.getCmp('tabFmAppMgkc');
        StTekNach.load({
            params: {
                what:'KvartplataApp',
                address_id: values.get('address_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    gridNachisl.getView().refresh();
                    form.getForm().reset();
                    gridNachisl.getView().getSelectionModel().select(0);

                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    }

});
